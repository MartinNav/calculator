<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="758" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="741.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="741.00"> </text><svg id="frames" x="10" width="1180" total_samples="3046"><g><title>`0x7FF963A22690 (1 samples, 0.03%)</title><rect x="0.0000%" y="693" width="0.0328%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="703.50"></text></g><g><title>`0x7FF963A2EC38 (2 samples, 0.07%)</title><rect x="0.0328%" y="613" width="0.0657%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="2"/><text x="0.2828%" y="623.50"></text></g><g><title>`0x7FF963A0288A (2 samples, 0.07%)</title><rect x="0.0328%" y="597" width="0.0657%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="2"/><text x="0.2828%" y="607.50"></text></g><g><title>`0x7FF963A17BAC (2 samples, 0.07%)</title><rect x="0.0328%" y="581" width="0.0657%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="2"/><text x="0.2828%" y="591.50"></text></g><g><title>`0x7FF963A6D9E4 (2 samples, 0.07%)</title><rect x="0.0328%" y="565" width="0.0657%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="2"/><text x="0.2828%" y="575.50"></text></g><g><title>`0x7FF963A2EED1 (1 samples, 0.03%)</title><rect x="0.0985%" y="581" width="0.0328%" height="15" fill="rgb(232,128,0)" fg:x="3" fg:w="1"/><text x="0.3485%" y="591.50"></text></g><g><title>`0x7FF963A2FFD2 (1 samples, 0.03%)</title><rect x="0.0985%" y="565" width="0.0328%" height="15" fill="rgb(207,160,47)" fg:x="3" fg:w="1"/><text x="0.3485%" y="575.50"></text></g><g><title>`0x7FF9639E15D0 (1 samples, 0.03%)</title><rect x="0.0985%" y="549" width="0.0328%" height="15" fill="rgb(228,23,34)" fg:x="3" fg:w="1"/><text x="0.3485%" y="559.50"></text></g><g><title>`0x7FF9639E17B1 (1 samples, 0.03%)</title><rect x="0.0985%" y="533" width="0.0328%" height="15" fill="rgb(218,30,26)" fg:x="3" fg:w="1"/><text x="0.3485%" y="543.50"></text></g><g><title>`0x7FF963A3C6D0 (1 samples, 0.03%)</title><rect x="0.0985%" y="517" width="0.0328%" height="15" fill="rgb(220,122,19)" fg:x="3" fg:w="1"/><text x="0.3485%" y="527.50"></text></g><g><title>`0x7FF963A6B853 (1 samples, 0.03%)</title><rect x="0.0985%" y="501" width="0.0328%" height="15" fill="rgb(250,228,42)" fg:x="3" fg:w="1"/><text x="0.3485%" y="511.50"></text></g><g><title>`0x7FF963A6BD59 (1 samples, 0.03%)</title><rect x="0.0985%" y="485" width="0.0328%" height="15" fill="rgb(240,193,28)" fg:x="3" fg:w="1"/><text x="0.3485%" y="495.50"></text></g><g><title>`0x7FF963A6BE50 (1 samples, 0.03%)</title><rect x="0.0985%" y="469" width="0.0328%" height="15" fill="rgb(216,20,37)" fg:x="3" fg:w="1"/><text x="0.3485%" y="479.50"></text></g><g><title>`0x7FF963AEB040 (1 samples, 0.03%)</title><rect x="0.0985%" y="453" width="0.0328%" height="15" fill="rgb(206,188,39)" fg:x="3" fg:w="1"/><text x="0.3485%" y="463.50"></text></g><g><title>`0x7FF963A2CC04 (1 samples, 0.03%)</title><rect x="0.0985%" y="437" width="0.0328%" height="15" fill="rgb(217,207,13)" fg:x="3" fg:w="1"/><text x="0.3485%" y="447.50"></text></g><g><title>`0x7FF963A2CD24 (1 samples, 0.03%)</title><rect x="0.0985%" y="421" width="0.0328%" height="15" fill="rgb(231,73,38)" fg:x="3" fg:w="1"/><text x="0.3485%" y="431.50"></text></g><g><title>`0x7FF963A2C97F (1 samples, 0.03%)</title><rect x="0.0985%" y="405" width="0.0328%" height="15" fill="rgb(225,20,46)" fg:x="3" fg:w="1"/><text x="0.3485%" y="415.50"></text></g><g><title>`0x7FF963A8C816 (1 samples, 0.03%)</title><rect x="0.0985%" y="389" width="0.0328%" height="15" fill="rgb(210,31,41)" fg:x="3" fg:w="1"/><text x="0.3485%" y="399.50"></text></g><g><title>`0x7FF963A6D4E4 (1 samples, 0.03%)</title><rect x="0.0985%" y="373" width="0.0328%" height="15" fill="rgb(221,200,47)" fg:x="3" fg:w="1"/><text x="0.3485%" y="383.50"></text></g><g><title>`0x7FF963A2F6E6 (2 samples, 0.07%)</title><rect x="0.0985%" y="597" width="0.0657%" height="15" fill="rgb(226,26,5)" fg:x="3" fg:w="2"/><text x="0.3485%" y="607.50"></text></g><g><title>`0x7FF963A2F026 (1 samples, 0.03%)</title><rect x="0.1313%" y="581" width="0.0328%" height="15" fill="rgb(249,33,26)" fg:x="4" fg:w="1"/><text x="0.3813%" y="591.50"></text></g><g><title>`0x7FF963A2F207 (1 samples, 0.03%)</title><rect x="0.1313%" y="565" width="0.0328%" height="15" fill="rgb(235,183,28)" fg:x="4" fg:w="1"/><text x="0.3813%" y="575.50"></text></g><g><title>`0x7FF963A2F37B (1 samples, 0.03%)</title><rect x="0.1313%" y="549" width="0.0328%" height="15" fill="rgb(221,5,38)" fg:x="4" fg:w="1"/><text x="0.3813%" y="559.50"></text></g><g><title>`0x7FF963A6D784 (1 samples, 0.03%)</title><rect x="0.1313%" y="533" width="0.0328%" height="15" fill="rgb(247,18,42)" fg:x="4" fg:w="1"/><text x="0.3813%" y="543.50"></text></g><g><title>`0x7FF963A231BA (5 samples, 0.16%)</title><rect x="0.0328%" y="661" width="0.1641%" height="15" fill="rgb(241,131,45)" fg:x="1" fg:w="5"/><text x="0.2828%" y="671.50"></text></g><g><title>`0x7FF963A32230 (5 samples, 0.16%)</title><rect x="0.0328%" y="645" width="0.1641%" height="15" fill="rgb(249,31,29)" fg:x="1" fg:w="5"/><text x="0.2828%" y="655.50"></text></g><g><title>`0x7FF963A2EBE3 (5 samples, 0.16%)</title><rect x="0.0328%" y="629" width="0.1641%" height="15" fill="rgb(225,111,53)" fg:x="1" fg:w="5"/><text x="0.2828%" y="639.50"></text></g><g><title>`0x7FF963A2EC70 (3 samples, 0.10%)</title><rect x="0.0985%" y="613" width="0.0985%" height="15" fill="rgb(238,160,17)" fg:x="3" fg:w="3"/><text x="0.3485%" y="623.50"></text></g><g><title>`0x7FF963A2F7B0 (1 samples, 0.03%)</title><rect x="0.1641%" y="597" width="0.0328%" height="15" fill="rgb(214,148,48)" fg:x="5" fg:w="1"/><text x="0.4141%" y="607.50"></text></g><g><title>`0x7FF963A2FD53 (1 samples, 0.03%)</title><rect x="0.1641%" y="581" width="0.0328%" height="15" fill="rgb(232,36,49)" fg:x="5" fg:w="1"/><text x="0.4141%" y="591.50"></text></g><g><title>`0x7FF9639E4C14 (1 samples, 0.03%)</title><rect x="0.1641%" y="565" width="0.0328%" height="15" fill="rgb(209,103,24)" fg:x="5" fg:w="1"/><text x="0.4141%" y="575.50"></text></g><g><title>`0x7FF9639E7B29 (1 samples, 0.03%)</title><rect x="0.1641%" y="549" width="0.0328%" height="15" fill="rgb(229,88,8)" fg:x="5" fg:w="1"/><text x="0.4141%" y="559.50"></text></g><g><title>`0x7FF9639E82C5 (1 samples, 0.03%)</title><rect x="0.1641%" y="533" width="0.0328%" height="15" fill="rgb(213,181,19)" fg:x="5" fg:w="1"/><text x="0.4141%" y="543.50"></text></g><g><title>`0x7FF963A2FA12 (1 samples, 0.03%)</title><rect x="0.1970%" y="501" width="0.0328%" height="15" fill="rgb(254,191,54)" fg:x="6" fg:w="1"/><text x="0.4470%" y="511.50"></text></g><g><title>`0x7FF963A2F207 (1 samples, 0.03%)</title><rect x="0.1970%" y="485" width="0.0328%" height="15" fill="rgb(241,83,37)" fg:x="6" fg:w="1"/><text x="0.4470%" y="495.50"></text></g><g><title>`0x7FF963A2F37B (1 samples, 0.03%)</title><rect x="0.1970%" y="469" width="0.0328%" height="15" fill="rgb(233,36,39)" fg:x="6" fg:w="1"/><text x="0.4470%" y="479.50"></text></g><g><title>`0x7FF963A6D784 (1 samples, 0.03%)</title><rect x="0.1970%" y="453" width="0.0328%" height="15" fill="rgb(226,3,54)" fg:x="6" fg:w="1"/><text x="0.4470%" y="463.50"></text></g><g><title>`0x7FF963A2FC9C (1 samples, 0.03%)</title><rect x="0.2298%" y="485" width="0.0328%" height="15" fill="rgb(245,192,40)" fg:x="7" fg:w="1"/><text x="0.4798%" y="495.50"></text></g><g><title>`0x7FF963A6D644 (1 samples, 0.03%)</title><rect x="0.2298%" y="469" width="0.0328%" height="15" fill="rgb(238,167,29)" fg:x="7" fg:w="1"/><text x="0.4798%" y="479.50"></text></g><g><title>`0x7FF9639E7EC7 (1 samples, 0.03%)</title><rect x="0.2626%" y="437" width="0.0328%" height="15" fill="rgb(232,182,51)" fg:x="8" fg:w="1"/><text x="0.5126%" y="447.50"></text></g><g><title>`0x7FF9639EA7DD (1 samples, 0.03%)</title><rect x="0.2626%" y="421" width="0.0328%" height="15" fill="rgb(231,60,39)" fg:x="8" fg:w="1"/><text x="0.5126%" y="431.50"></text></g><g><title>`0x7FF9639ED77D (1 samples, 0.03%)</title><rect x="0.2626%" y="405" width="0.0328%" height="15" fill="rgb(208,69,12)" fg:x="8" fg:w="1"/><text x="0.5126%" y="415.50"></text></g><g><title>`0x7FF9639E88A8 (1 samples, 0.03%)</title><rect x="0.2955%" y="437" width="0.0328%" height="15" fill="rgb(235,93,37)" fg:x="9" fg:w="1"/><text x="0.5455%" y="447.50"></text></g><g><title>`0x7FF9639E4479 (1 samples, 0.03%)</title><rect x="0.2955%" y="421" width="0.0328%" height="15" fill="rgb(213,116,39)" fg:x="9" fg:w="1"/><text x="0.5455%" y="431.50"></text></g><g><title>`0x7FF9639E4AAA (1 samples, 0.03%)</title><rect x="0.2955%" y="405" width="0.0328%" height="15" fill="rgb(222,207,29)" fg:x="9" fg:w="1"/><text x="0.5455%" y="415.50"></text></g><g><title>`0x7FF9639E4D42 (1 samples, 0.03%)</title><rect x="0.2955%" y="389" width="0.0328%" height="15" fill="rgb(206,96,30)" fg:x="9" fg:w="1"/><text x="0.5455%" y="399.50"></text></g><g><title>`0x7FF963A6D4E4 (1 samples, 0.03%)</title><rect x="0.2955%" y="373" width="0.0328%" height="15" fill="rgb(218,138,4)" fg:x="9" fg:w="1"/><text x="0.5455%" y="383.50"></text></g><g><title>`0x7FF9639EFB53 (5 samples, 0.16%)</title><rect x="0.1970%" y="533" width="0.1641%" height="15" fill="rgb(250,191,14)" fg:x="6" fg:w="5"/><text x="0.4470%" y="543.50"></text></g><g><title>`0x7FF963A2ED1F (5 samples, 0.16%)</title><rect x="0.1970%" y="517" width="0.1641%" height="15" fill="rgb(239,60,40)" fg:x="6" fg:w="5"/><text x="0.4470%" y="527.50"></text></g><g><title>`0x7FF963A2FA80 (4 samples, 0.13%)</title><rect x="0.2298%" y="501" width="0.1313%" height="15" fill="rgb(206,27,48)" fg:x="7" fg:w="4"/><text x="0.4798%" y="511.50"></text></g><g><title>`0x7FF963A2FD53 (3 samples, 0.10%)</title><rect x="0.2626%" y="485" width="0.0985%" height="15" fill="rgb(225,35,8)" fg:x="8" fg:w="3"/><text x="0.5126%" y="495.50"></text></g><g><title>`0x7FF9639E4C14 (3 samples, 0.10%)</title><rect x="0.2626%" y="469" width="0.0985%" height="15" fill="rgb(250,213,24)" fg:x="8" fg:w="3"/><text x="0.5126%" y="479.50"></text></g><g><title>`0x7FF9639E7B29 (3 samples, 0.10%)</title><rect x="0.2626%" y="453" width="0.0985%" height="15" fill="rgb(247,123,22)" fg:x="8" fg:w="3"/><text x="0.5126%" y="463.50"></text></g><g><title>`0x7FF9639E89C9 (1 samples, 0.03%)</title><rect x="0.3283%" y="437" width="0.0328%" height="15" fill="rgb(231,138,38)" fg:x="10" fg:w="1"/><text x="0.5783%" y="447.50"></text></g><g><title>`0x7FF9635B78A7 (1 samples, 0.03%)</title><rect x="0.3611%" y="437" width="0.0328%" height="15" fill="rgb(231,145,46)" fg:x="11" fg:w="1"/><text x="0.6111%" y="447.50"></text></g><g><title>`0x7FF9635B7BA3 (1 samples, 0.03%)</title><rect x="0.3611%" y="421" width="0.0328%" height="15" fill="rgb(251,118,11)" fg:x="11" fg:w="1"/><text x="0.6111%" y="431.50"></text></g><g><title>`0x7FF9635C9798 (1 samples, 0.03%)</title><rect x="0.3611%" y="405" width="0.0328%" height="15" fill="rgb(217,147,25)" fg:x="11" fg:w="1"/><text x="0.6111%" y="415.50"></text></g><g><title>`0x7FF961666498 (1 samples, 0.03%)</title><rect x="0.3611%" y="389" width="0.0328%" height="15" fill="rgb(247,81,37)" fg:x="11" fg:w="1"/><text x="0.6111%" y="399.50"></text></g><g><title>`0x7FF9639DABD9 (1 samples, 0.03%)</title><rect x="0.3611%" y="373" width="0.0328%" height="15" fill="rgb(209,12,38)" fg:x="11" fg:w="1"/><text x="0.6111%" y="383.50"></text></g><g><title>`0x7FF9639DA073 (1 samples, 0.03%)</title><rect x="0.3611%" y="357" width="0.0328%" height="15" fill="rgb(227,1,9)" fg:x="11" fg:w="1"/><text x="0.6111%" y="367.50"></text></g><g><title>`0x7FF9639DA4EB (1 samples, 0.03%)</title><rect x="0.3611%" y="341" width="0.0328%" height="15" fill="rgb(248,47,43)" fg:x="11" fg:w="1"/><text x="0.6111%" y="351.50"></text></g><g><title>`0x7FF9611F05A2 (7 samples, 0.23%)</title><rect x="0.1970%" y="629" width="0.2298%" height="15" fill="rgb(221,10,30)" fg:x="6" fg:w="7"/><text x="0.4470%" y="639.50"></text></g><g><title>`0x7FF9611F19C7 (7 samples, 0.23%)</title><rect x="0.1970%" y="613" width="0.2298%" height="15" fill="rgb(210,229,1)" fg:x="6" fg:w="7"/><text x="0.4470%" y="623.50"></text></g><g><title>`0x7FF9611EC050 (7 samples, 0.23%)</title><rect x="0.1970%" y="597" width="0.2298%" height="15" fill="rgb(222,148,37)" fg:x="6" fg:w="7"/><text x="0.4470%" y="607.50"></text></g><g><title>`0x7FF961623322 (7 samples, 0.23%)</title><rect x="0.1970%" y="581" width="0.2298%" height="15" fill="rgb(234,67,33)" fg:x="6" fg:w="7"/><text x="0.4470%" y="591.50"></text></g><g><title>`0x7FF9639E6AF4 (7 samples, 0.23%)</title><rect x="0.1970%" y="565" width="0.2298%" height="15" fill="rgb(247,98,35)" fg:x="6" fg:w="7"/><text x="0.4470%" y="575.50"></text></g><g><title>`0x7FF9639E73E4 (7 samples, 0.23%)</title><rect x="0.1970%" y="549" width="0.2298%" height="15" fill="rgb(247,138,52)" fg:x="6" fg:w="7"/><text x="0.4470%" y="559.50"></text></g><g><title>`0x7FF9639EFBAE (2 samples, 0.07%)</title><rect x="0.3611%" y="533" width="0.0657%" height="15" fill="rgb(213,79,30)" fg:x="11" fg:w="2"/><text x="0.6111%" y="543.50"></text></g><g><title>`0x7FF963A0D947 (2 samples, 0.07%)</title><rect x="0.3611%" y="517" width="0.0657%" height="15" fill="rgb(246,177,23)" fg:x="11" fg:w="2"/><text x="0.6111%" y="527.50"></text></g><g><title>`0x7FF963A3C0E0 (2 samples, 0.07%)</title><rect x="0.3611%" y="501" width="0.0657%" height="15" fill="rgb(230,62,27)" fg:x="11" fg:w="2"/><text x="0.6111%" y="511.50"></text></g><g><title>`0x7FF963A3C05A (2 samples, 0.07%)</title><rect x="0.3611%" y="485" width="0.0657%" height="15" fill="rgb(216,154,8)" fg:x="11" fg:w="2"/><text x="0.6111%" y="495.50"></text></g><g><title>`0x7FF963A3C2C7 (2 samples, 0.07%)</title><rect x="0.3611%" y="469" width="0.0657%" height="15" fill="rgb(244,35,45)" fg:x="11" fg:w="2"/><text x="0.6111%" y="479.50"></text></g><g><title>`0x7FF9639E9A1D (2 samples, 0.07%)</title><rect x="0.3611%" y="453" width="0.0657%" height="15" fill="rgb(251,115,12)" fg:x="11" fg:w="2"/><text x="0.6111%" y="463.50"></text></g><g><title>`0x7FF9635B78EF (1 samples, 0.03%)</title><rect x="0.3940%" y="437" width="0.0328%" height="15" fill="rgb(240,54,50)" fg:x="12" fg:w="1"/><text x="0.6440%" y="447.50"></text></g><g><title>`0x7FF9635D0AAE (1 samples, 0.03%)</title><rect x="0.3940%" y="421" width="0.0328%" height="15" fill="rgb(233,84,52)" fg:x="12" fg:w="1"/><text x="0.6440%" y="431.50"></text></g><g><title>`0x7FF9635D0C20 (1 samples, 0.03%)</title><rect x="0.3940%" y="405" width="0.0328%" height="15" fill="rgb(207,117,47)" fg:x="12" fg:w="1"/><text x="0.6440%" y="415.50"></text></g><g><title>`0x7FF9635C9F44 (1 samples, 0.03%)</title><rect x="0.3940%" y="389" width="0.0328%" height="15" fill="rgb(249,43,39)" fg:x="12" fg:w="1"/><text x="0.6440%" y="399.50"></text></g><g><title>`0x7FF9635C9D40 (1 samples, 0.03%)</title><rect x="0.3940%" y="373" width="0.0328%" height="15" fill="rgb(209,38,44)" fg:x="12" fg:w="1"/><text x="0.6440%" y="383.50"></text></g><g><title>`0x7FF9639FB44D (1 samples, 0.03%)</title><rect x="0.3940%" y="357" width="0.0328%" height="15" fill="rgb(236,212,23)" fg:x="12" fg:w="1"/><text x="0.6440%" y="367.50"></text></g><g><title>`0x7FF9639FD37A (1 samples, 0.03%)</title><rect x="0.3940%" y="341" width="0.0328%" height="15" fill="rgb(242,79,21)" fg:x="12" fg:w="1"/><text x="0.6440%" y="351.50"></text></g><g><title>`0x7FF963A14D2F (1 samples, 0.03%)</title><rect x="0.3940%" y="325" width="0.0328%" height="15" fill="rgb(211,96,35)" fg:x="12" fg:w="1"/><text x="0.6440%" y="335.50"></text></g><g><title>`0x7FF963A14B80 (1 samples, 0.03%)</title><rect x="0.3940%" y="309" width="0.0328%" height="15" fill="rgb(253,215,40)" fg:x="12" fg:w="1"/><text x="0.6440%" y="319.50"></text></g><g><title>`0x7FF963A14810 (1 samples, 0.03%)</title><rect x="0.3940%" y="293" width="0.0328%" height="15" fill="rgb(211,81,21)" fg:x="12" fg:w="1"/><text x="0.6440%" y="303.50"></text></g><g><title>`0x7FF963A14739 (1 samples, 0.03%)</title><rect x="0.3940%" y="277" width="0.0328%" height="15" fill="rgb(208,190,38)" fg:x="12" fg:w="1"/><text x="0.6440%" y="287.50"></text></g><g><title>`0x7FF963A138C0 (1 samples, 0.03%)</title><rect x="0.3940%" y="261" width="0.0328%" height="15" fill="rgb(235,213,38)" fg:x="12" fg:w="1"/><text x="0.6440%" y="271.50"></text></g><g><title>`0x7FF963A4CC72 (1 samples, 0.03%)</title><rect x="0.3940%" y="245" width="0.0328%" height="15" fill="rgb(237,122,38)" fg:x="12" fg:w="1"/><text x="0.6440%" y="255.50"></text></g><g><title>`0x7FF963A6D224 (1 samples, 0.03%)</title><rect x="0.3940%" y="229" width="0.0328%" height="15" fill="rgb(244,218,35)" fg:x="12" fg:w="1"/><text x="0.6440%" y="239.50"></text></g><g><title>`0x7FF9611F045F (8 samples, 0.26%)</title><rect x="0.1970%" y="645" width="0.2626%" height="15" fill="rgb(240,68,47)" fg:x="6" fg:w="8"/><text x="0.4470%" y="655.50"></text></g><g><title>`0x7FF9611F05BC (1 samples, 0.03%)</title><rect x="0.4268%" y="629" width="0.0328%" height="15" fill="rgb(210,16,53)" fg:x="13" fg:w="1"/><text x="0.6768%" y="639.50"></text></g><g><title>`0x7FF962BDE3BB (1 samples, 0.03%)</title><rect x="0.4268%" y="613" width="0.0328%" height="15" fill="rgb(235,124,12)" fg:x="13" fg:w="1"/><text x="0.6768%" y="623.50"></text></g><g><title>`0x7FF963A2DA8D (1 samples, 0.03%)</title><rect x="0.4268%" y="597" width="0.0328%" height="15" fill="rgb(224,169,11)" fg:x="13" fg:w="1"/><text x="0.6768%" y="607.50"></text></g><g><title>`0x7FF963A2DCDA (1 samples, 0.03%)</title><rect x="0.4268%" y="581" width="0.0328%" height="15" fill="rgb(250,166,2)" fg:x="13" fg:w="1"/><text x="0.6768%" y="591.50"></text></g><g><title>`0x7FF9639E9A1D (1 samples, 0.03%)</title><rect x="0.4268%" y="565" width="0.0328%" height="15" fill="rgb(242,216,29)" fg:x="13" fg:w="1"/><text x="0.6768%" y="575.50"></text></g><g><title>`0x7FF9635B793D (1 samples, 0.03%)</title><rect x="0.4268%" y="549" width="0.0328%" height="15" fill="rgb(230,116,27)" fg:x="13" fg:w="1"/><text x="0.6768%" y="559.50"></text></g><g><title>`0x7FF9635EA173 (1 samples, 0.03%)</title><rect x="0.4268%" y="533" width="0.0328%" height="15" fill="rgb(228,99,48)" fg:x="13" fg:w="1"/><text x="0.6768%" y="543.50"></text></g><g><title>`0x7FF9635EA553 (1 samples, 0.03%)</title><rect x="0.4268%" y="517" width="0.0328%" height="15" fill="rgb(253,11,6)" fg:x="13" fg:w="1"/><text x="0.6768%" y="527.50"></text></g><g><title>`0x7FF9635ECF27 (1 samples, 0.03%)</title><rect x="0.4268%" y="501" width="0.0328%" height="15" fill="rgb(247,143,39)" fg:x="13" fg:w="1"/><text x="0.6768%" y="511.50"></text></g><g><title>`0x7FF9635F6BB0 (1 samples, 0.03%)</title><rect x="0.4268%" y="485" width="0.0328%" height="15" fill="rgb(236,97,10)" fg:x="13" fg:w="1"/><text x="0.6768%" y="495.50"></text></g><g><title>profiling.exe`std::rt::lang_start_internal::closure$1 (1 samples, 0.03%)</title><rect x="0.4596%" y="549" width="0.0328%" height="15" fill="rgb(233,208,19)" fg:x="14" fg:w="1"/><text x="0.7096%" y="559.50"></text></g><g><title>profiling.exe`std::rt::init (1 samples, 0.03%)</title><rect x="0.4596%" y="533" width="0.0328%" height="15" fill="rgb(216,164,2)" fg:x="14" fg:w="1"/><text x="0.7096%" y="543.50"></text></g><g><title>profiling.exe`alloc::ffi::c_str::CString::new (1 samples, 0.03%)</title><rect x="0.4596%" y="517" width="0.0328%" height="15" fill="rgb(220,129,5)" fg:x="14" fg:w="1"/><text x="0.7096%" y="527.50"></text></g><g><title>profiling.exe`std::sys::windows::thread::Thread::set_name (1 samples, 0.03%)</title><rect x="0.4596%" y="501" width="0.0328%" height="15" fill="rgb(242,17,10)" fg:x="14" fg:w="1"/><text x="0.7096%" y="511.50"></text></g><g><title>profiling.exe`core::ptr::drop_in_place (1 samples, 0.03%)</title><rect x="0.4596%" y="485" width="0.0328%" height="15" fill="rgb(242,107,0)" fg:x="14" fg:w="1"/><text x="0.7096%" y="495.50"></text></g><g><title>profiling.exe`core::ptr::drop_in_place (1 samples, 0.03%)</title><rect x="0.4596%" y="469" width="0.0328%" height="15" fill="rgb(251,28,31)" fg:x="14" fg:w="1"/><text x="0.7096%" y="479.50"></text></g><g><title>profiling.exe`alloc::raw_vec::impl$4::drop (1 samples, 0.03%)</title><rect x="0.4596%" y="453" width="0.0328%" height="15" fill="rgb(233,223,10)" fg:x="14" fg:w="1"/><text x="0.7096%" y="463.50"></text></g><g><title>profiling.exe`alloc::raw_vec::RawVec::current_memory (1 samples, 0.03%)</title><rect x="0.4596%" y="437" width="0.0328%" height="15" fill="rgb(215,21,27)" fg:x="14" fg:w="1"/><text x="0.7096%" y="447.50"></text></g><g><title>`0x7FF9616644E7 (1 samples, 0.03%)</title><rect x="0.4596%" y="421" width="0.0328%" height="15" fill="rgb(232,23,21)" fg:x="14" fg:w="1"/><text x="0.7096%" y="431.50"></text></g><g><title>`0x7FF963A6D184 (1 samples, 0.03%)</title><rect x="0.4596%" y="405" width="0.0328%" height="15" fill="rgb(244,5,23)" fg:x="14" fg:w="1"/><text x="0.7096%" y="415.50"></text></g><g><title>`0x7FF9639F47B1 (1 samples, 0.03%)</title><rect x="0.4924%" y="469" width="0.0328%" height="15" fill="rgb(226,81,46)" fg:x="15" fg:w="1"/><text x="0.7424%" y="479.50"></text></g><g><title>`0x7FF9639F5B74 (1 samples, 0.03%)</title><rect x="0.4924%" y="453" width="0.0328%" height="15" fill="rgb(247,70,30)" fg:x="15" fg:w="1"/><text x="0.7424%" y="463.50"></text></g><g><title>`0x7FF9639F6F37 (1 samples, 0.03%)</title><rect x="0.4924%" y="437" width="0.0328%" height="15" fill="rgb(212,68,19)" fg:x="15" fg:w="1"/><text x="0.7424%" y="447.50"></text></g><g><title>`0x7FF9639D9B1A (1 samples, 0.03%)</title><rect x="0.4924%" y="421" width="0.0328%" height="15" fill="rgb(240,187,13)" fg:x="15" fg:w="1"/><text x="0.7424%" y="431.50"></text></g><g><title>`0x7FF963A6D3A4 (1 samples, 0.03%)</title><rect x="0.4924%" y="405" width="0.0328%" height="15" fill="rgb(223,113,26)" fg:x="15" fg:w="1"/><text x="0.7424%" y="415.50"></text></g><g><title>profiling.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::len (1 samples, 0.03%)</title><rect x="1.2147%" y="357" width="0.0328%" height="15" fill="rgb(206,192,2)" fg:x="37" fg:w="1"/><text x="1.4647%" y="367.50"></text></g><g><title>`0x7FF9639F47B1 (1 samples, 0.03%)</title><rect x="1.2147%" y="341" width="0.0328%" height="15" fill="rgb(241,108,4)" fg:x="37" fg:w="1"/><text x="1.4647%" y="351.50"></text></g><g><title>`0x7FF9639F5B74 (1 samples, 0.03%)</title><rect x="1.2147%" y="325" width="0.0328%" height="15" fill="rgb(247,173,49)" fg:x="37" fg:w="1"/><text x="1.4647%" y="335.50"></text></g><g><title>`0x7FF9639F6F37 (1 samples, 0.03%)</title><rect x="1.2147%" y="309" width="0.0328%" height="15" fill="rgb(224,114,35)" fg:x="37" fg:w="1"/><text x="1.4647%" y="319.50"></text></g><g><title>`0x7FF9639D9B1A (1 samples, 0.03%)</title><rect x="1.2147%" y="293" width="0.0328%" height="15" fill="rgb(245,159,27)" fg:x="37" fg:w="1"/><text x="1.4647%" y="303.50"></text></g><g><title>`0x7FF963A6D3A4 (1 samples, 0.03%)</title><rect x="1.2147%" y="277" width="0.0328%" height="15" fill="rgb(245,172,44)" fg:x="37" fg:w="1"/><text x="1.4647%" y="287.50"></text></g><g><title>profiling.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::pop (6 samples, 0.20%)</title><rect x="1.2475%" y="357" width="0.1970%" height="15" fill="rgb(236,23,11)" fg:x="38" fg:w="6"/><text x="1.4975%" y="367.50"></text></g><g><title>profiling.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::as_ptr (1 samples, 0.03%)</title><rect x="1.4117%" y="341" width="0.0328%" height="15" fill="rgb(205,117,38)" fg:x="43" fg:w="1"/><text x="1.6617%" y="351.50"></text></g><g><title>profiling.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::push (27 samples, 0.89%)</title><rect x="1.4445%" y="357" width="0.8864%" height="15" fill="rgb(237,72,25)" fg:x="44" fg:w="27"/><text x="1.6945%" y="367.50"></text></g><g><title>profiling.exe`core::ptr::write (18 samples, 0.59%)</title><rect x="1.7400%" y="341" width="0.5909%" height="15" fill="rgb(244,70,9)" fg:x="53" fg:w="18"/><text x="1.9900%" y="351.50"></text></g><g><title>profiling.exe`alloc::vec::into_iter::impl$5::next(alloc::vec::into_iter::IntoIter&lt;enum2$ (3 samples, 0.10%)</title><rect x="2.3309%" y="357" width="0.0985%" height="15" fill="rgb(217,125,39)" fg:x="71" fg:w="3"/><text x="2.5809%" y="367.50"></text></g><g><title>`0x7FF9611FD021 (1 samples, 0.03%)</title><rect x="2.4294%" y="341" width="0.0328%" height="15" fill="rgb(235,36,10)" fg:x="74" fg:w="1"/><text x="2.6794%" y="351.50"></text></g><g><title>`0x7FF9611FD047 (1 samples, 0.03%)</title><rect x="2.4622%" y="341" width="0.0328%" height="15" fill="rgb(251,123,47)" fg:x="75" fg:w="1"/><text x="2.7122%" y="351.50"></text></g><g><title>`0x7FF9611FD077 (2 samples, 0.07%)</title><rect x="2.4951%" y="341" width="0.0657%" height="15" fill="rgb(221,13,13)" fg:x="76" fg:w="2"/><text x="2.7451%" y="351.50"></text></g><g><title>`0x7FF9611FD0D6 (2 samples, 0.07%)</title><rect x="2.5607%" y="341" width="0.0657%" height="15" fill="rgb(238,131,9)" fg:x="78" fg:w="2"/><text x="2.8107%" y="351.50"></text></g><g><title>`0x7FF9611FD102 (2 samples, 0.07%)</title><rect x="2.6264%" y="341" width="0.0657%" height="15" fill="rgb(211,50,8)" fg:x="80" fg:w="2"/><text x="2.8764%" y="351.50"></text></g><g><title>`0x7FF9611FD12A (4 samples, 0.13%)</title><rect x="2.6921%" y="341" width="0.1313%" height="15" fill="rgb(245,182,24)" fg:x="82" fg:w="4"/><text x="2.9421%" y="351.50"></text></g><g><title>`0x7FF9611FD158 (1 samples, 0.03%)</title><rect x="2.8234%" y="341" width="0.0328%" height="15" fill="rgb(242,14,37)" fg:x="86" fg:w="1"/><text x="3.0734%" y="351.50"></text></g><g><title>`0x7FF9611FD17F (2 samples, 0.07%)</title><rect x="2.8562%" y="341" width="0.0657%" height="15" fill="rgb(246,228,12)" fg:x="87" fg:w="2"/><text x="3.1062%" y="351.50"></text></g><g><title>`0x7FF9611FD191 (1 samples, 0.03%)</title><rect x="2.9219%" y="341" width="0.0328%" height="15" fill="rgb(213,55,15)" fg:x="89" fg:w="1"/><text x="3.1719%" y="351.50"></text></g><g><title>`0x7FF9611FD1C0 (3 samples, 0.10%)</title><rect x="2.9547%" y="341" width="0.0985%" height="15" fill="rgb(209,9,3)" fg:x="90" fg:w="3"/><text x="3.2047%" y="351.50"></text></g><g><title>`0x7FF9611FD1EA (2 samples, 0.07%)</title><rect x="3.0532%" y="341" width="0.0657%" height="15" fill="rgb(230,59,30)" fg:x="93" fg:w="2"/><text x="3.3032%" y="351.50"></text></g><g><title>`0x7FF9611FD212 (2 samples, 0.07%)</title><rect x="3.1188%" y="341" width="0.0657%" height="15" fill="rgb(209,121,21)" fg:x="95" fg:w="2"/><text x="3.3688%" y="351.50"></text></g><g><title>`0x7FF9611FD225 (1 samples, 0.03%)</title><rect x="3.1845%" y="341" width="0.0328%" height="15" fill="rgb(220,109,13)" fg:x="97" fg:w="1"/><text x="3.4345%" y="351.50"></text></g><g><title>`0x7FF9611FD237 (7 samples, 0.23%)</title><rect x="3.2173%" y="341" width="0.2298%" height="15" fill="rgb(232,18,1)" fg:x="98" fg:w="7"/><text x="3.4673%" y="351.50"></text></g><g><title>`0x7FF9611FD24B (2 samples, 0.07%)</title><rect x="3.4471%" y="341" width="0.0657%" height="15" fill="rgb(215,41,42)" fg:x="105" fg:w="2"/><text x="3.6971%" y="351.50"></text></g><g><title>`0x7FF9611FD24F (6 samples, 0.20%)</title><rect x="3.5128%" y="341" width="0.1970%" height="15" fill="rgb(224,123,36)" fg:x="107" fg:w="6"/><text x="3.7628%" y="351.50"></text></g><g><title>`0x7FF9611FD253 (6 samples, 0.20%)</title><rect x="3.7098%" y="341" width="0.1970%" height="15" fill="rgb(240,125,3)" fg:x="113" fg:w="6"/><text x="3.9598%" y="351.50"></text></g><g><title>`0x7FF9611FD25B (4 samples, 0.13%)</title><rect x="3.9068%" y="341" width="0.1313%" height="15" fill="rgb(205,98,50)" fg:x="119" fg:w="4"/><text x="4.1568%" y="351.50"></text></g><g><title>`0x7FF9611FD25F (9 samples, 0.30%)</title><rect x="4.0381%" y="341" width="0.2955%" height="15" fill="rgb(205,185,37)" fg:x="123" fg:w="9"/><text x="4.2881%" y="351.50"></text></g><g><title>`0x7FF9611FD272 (9 samples, 0.30%)</title><rect x="4.3336%" y="341" width="0.2955%" height="15" fill="rgb(238,207,15)" fg:x="132" fg:w="9"/><text x="4.5836%" y="351.50"></text></g><g><title>`0x7FF9611FD280 (4 samples, 0.13%)</title><rect x="4.6290%" y="341" width="0.1313%" height="15" fill="rgb(213,199,42)" fg:x="141" fg:w="4"/><text x="4.8790%" y="351.50"></text></g><g><title>`0x7FF9611FD299 (1 samples, 0.03%)</title><rect x="4.7603%" y="341" width="0.0328%" height="15" fill="rgb(235,201,11)" fg:x="145" fg:w="1"/><text x="5.0103%" y="351.50"></text></g><g><title>`0x7FF9611FD2AD (5 samples, 0.16%)</title><rect x="4.7932%" y="341" width="0.1641%" height="15" fill="rgb(207,46,11)" fg:x="146" fg:w="5"/><text x="5.0432%" y="351.50"></text></g><g><title>`0x7FF9611FD2CF (5 samples, 0.16%)</title><rect x="4.9573%" y="341" width="0.1641%" height="15" fill="rgb(241,35,35)" fg:x="151" fg:w="5"/><text x="5.2073%" y="351.50"></text></g><g><title>`0x7FF9611FD2D3 (3 samples, 0.10%)</title><rect x="5.1215%" y="341" width="0.0985%" height="15" fill="rgb(243,32,47)" fg:x="156" fg:w="3"/><text x="5.3715%" y="351.50"></text></g><g><title>`0x7FF9611FD2EB (8 samples, 0.26%)</title><rect x="5.2200%" y="341" width="0.2626%" height="15" fill="rgb(247,202,23)" fg:x="159" fg:w="8"/><text x="5.4700%" y="351.50"></text></g><g><title>`0x7FF9611FD2FA (18 samples, 0.59%)</title><rect x="5.4826%" y="341" width="0.5909%" height="15" fill="rgb(219,102,11)" fg:x="167" fg:w="18"/><text x="5.7326%" y="351.50"></text></g><g><title>`0x7FF9611FD307 (12 samples, 0.39%)</title><rect x="6.0735%" y="341" width="0.3940%" height="15" fill="rgb(243,110,44)" fg:x="185" fg:w="12"/><text x="6.3235%" y="351.50"></text></g><g><title>`0x7FF9611FD317 (11 samples, 0.36%)</title><rect x="6.4675%" y="341" width="0.3611%" height="15" fill="rgb(222,74,54)" fg:x="197" fg:w="11"/><text x="6.7175%" y="351.50"></text></g><g><title>`0x7FF9611FD324 (15 samples, 0.49%)</title><rect x="6.8286%" y="341" width="0.4924%" height="15" fill="rgb(216,99,12)" fg:x="208" fg:w="15"/><text x="7.0786%" y="351.50"></text></g><g><title>`0x7FF9611FD328 (16 samples, 0.53%)</title><rect x="7.3211%" y="341" width="0.5253%" height="15" fill="rgb(226,22,26)" fg:x="223" fg:w="16"/><text x="7.5711%" y="351.50"></text></g><g><title>`0x7FF9611FD32E (5 samples, 0.16%)</title><rect x="7.8464%" y="341" width="0.1641%" height="15" fill="rgb(217,163,10)" fg:x="239" fg:w="5"/><text x="8.0964%" y="351.50"></text></g><g><title>`0x7FF9611FD341 (1 samples, 0.03%)</title><rect x="8.0105%" y="341" width="0.0328%" height="15" fill="rgb(213,25,53)" fg:x="244" fg:w="1"/><text x="8.2605%" y="351.50"></text></g><g><title>`0x7FF9611FD345 (1 samples, 0.03%)</title><rect x="8.0433%" y="341" width="0.0328%" height="15" fill="rgb(252,105,26)" fg:x="245" fg:w="1"/><text x="8.2933%" y="351.50"></text></g><g><title>`0x7FF9611FD34B (11 samples, 0.36%)</title><rect x="8.0762%" y="341" width="0.3611%" height="15" fill="rgb(220,39,43)" fg:x="246" fg:w="11"/><text x="8.3262%" y="351.50"></text></g><g><title>profiling.exe`math_lib::parser::evaluate_expression(alloc::vec::Vec&lt;enum2$ (252 samples, 8.27%)</title><rect x="0.5253%" y="373" width="8.2731%" height="15" fill="rgb(229,68,48)" fg:x="16" fg:w="252"/><text x="0.7753%" y="383.50">profiling.ex..</text></g><g><title>profiling.exe`std::f64::impl$0::powf (194 samples, 6.37%)</title><rect x="2.4294%" y="357" width="6.3690%" height="15" fill="rgb(252,8,32)" fg:x="74" fg:w="194"/><text x="2.6794%" y="367.50">profilin..</text></g><g><title>`0x7FF9611FD361 (11 samples, 0.36%)</title><rect x="8.4373%" y="341" width="0.3611%" height="15" fill="rgb(223,20,43)" fg:x="257" fg:w="11"/><text x="8.6873%" y="351.50"></text></g><g><title>profiling.exe`alloc::vec::Vec&lt;enum2$&lt;math_lib::parser::Token&gt;,alloc::alloc::Global&gt;::pop (5 samples, 0.16%)</title><rect x="10.2758%" y="357" width="0.1641%" height="15" fill="rgb(229,81,49)" fg:x="313" fg:w="5"/><text x="10.5258%" y="367.50"></text></g><g><title>profiling.exe`core::ptr::read(enum2$ (5 samples, 0.16%)</title><rect x="10.2758%" y="341" width="0.1641%" height="15" fill="rgb(236,28,36)" fg:x="313" fg:w="5"/><text x="10.5258%" y="351.50"></text></g><g><title>`0x7FF963A7400E (1 samples, 0.03%)</title><rect x="10.4399%" y="213" width="0.0328%" height="15" fill="rgb(249,185,26)" fg:x="318" fg:w="1"/><text x="10.6899%" y="223.50"></text></g><g><title>`0x7FF963A74013 (141 samples, 4.63%)</title><rect x="10.4728%" y="213" width="4.6290%" height="15" fill="rgb(249,174,33)" fg:x="319" fg:w="141"/><text x="10.7228%" y="223.50">`0x7F..</text></g><g><title>`0x7FF963A74017 (4 samples, 0.13%)</title><rect x="15.1018%" y="213" width="0.1313%" height="15" fill="rgb(233,201,37)" fg:x="460" fg:w="4"/><text x="15.3518%" y="223.50"></text></g><g><title>`0x7FF963A74020 (2 samples, 0.07%)</title><rect x="15.2331%" y="213" width="0.0657%" height="15" fill="rgb(221,78,26)" fg:x="464" fg:w="2"/><text x="15.4831%" y="223.50"></text></g><g><title>`0x7FF963A74027 (1 samples, 0.03%)</title><rect x="15.2988%" y="213" width="0.0328%" height="15" fill="rgb(250,127,30)" fg:x="466" fg:w="1"/><text x="15.5488%" y="223.50"></text></g><g><title>`0x7FF963A7402B (1 samples, 0.03%)</title><rect x="15.3316%" y="213" width="0.0328%" height="15" fill="rgb(230,49,44)" fg:x="467" fg:w="1"/><text x="15.5816%" y="223.50"></text></g><g><title>`0x7FF963A7402F (2 samples, 0.07%)</title><rect x="15.3644%" y="213" width="0.0657%" height="15" fill="rgb(229,67,23)" fg:x="468" fg:w="2"/><text x="15.6144%" y="223.50"></text></g><g><title>`0x7FF9639F27D9 (154 samples, 5.06%)</title><rect x="10.4399%" y="229" width="5.0558%" height="15" fill="rgb(249,83,47)" fg:x="318" fg:w="154"/><text x="10.6899%" y="239.50">`0x7FF..</text></g><g><title>`0x7FF963A74032 (2 samples, 0.07%)</title><rect x="15.4301%" y="213" width="0.0657%" height="15" fill="rgb(215,43,3)" fg:x="470" fg:w="2"/><text x="15.6801%" y="223.50"></text></g><g><title>profiling.exe`alloc::raw_vec::RawVec&lt;enum2$&lt;math_lib::parser::Token&gt;,alloc::alloc::Global&gt;::reserve_for_push&lt;enum2$&lt;math_lib::parser::Token&gt;,alloc::alloc::Global&gt; (161 samples, 5.29%)</title><rect x="10.4399%" y="341" width="5.2856%" height="15" fill="rgb(238,154,13)" fg:x="318" fg:w="161"/><text x="10.6899%" y="351.50">profil..</text></g><g><title>profiling.exe`alloc::raw_vec::RawVec&lt;enum2$&lt;math_lib::parser::Token&gt;,alloc::alloc::Global&gt;::grow_amortized (161 samples, 5.29%)</title><rect x="10.4399%" y="325" width="5.2856%" height="15" fill="rgb(219,56,2)" fg:x="318" fg:w="161"/><text x="10.6899%" y="335.50">profil..</text></g><g><title>profiling.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (161 samples, 5.29%)</title><rect x="10.4399%" y="309" width="5.2856%" height="15" fill="rgb(233,0,4)" fg:x="318" fg:w="161"/><text x="10.6899%" y="319.50">profil..</text></g><g><title>profiling.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(enum2$&lt;core::result::Result&lt;core::alloc::layout::Layout,core::alloc::layout::LayoutError&gt; &gt;, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (161 samples, 5.29%)</title><rect x="10.4399%" y="293" width="5.2856%" height="15" fill="rgb(235,30,7)" fg:x="318" fg:w="161"/><text x="10.6899%" y="303.50">profil..</text></g><g><title>profiling.exe`enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;, alloc::raw_vec::finish_grow::closure_env$1 (161 samples, 5.29%)</title><rect x="10.4399%" y="277" width="5.2856%" height="15" fill="rgb(250,79,13)" fg:x="318" fg:w="161"/><text x="10.6899%" y="287.50">profil..</text></g><g><title>`0x7FF9639F36BD (161 samples, 5.29%)</title><rect x="10.4399%" y="261" width="5.2856%" height="15" fill="rgb(211,146,34)" fg:x="318" fg:w="161"/><text x="10.6899%" y="271.50">`0x7FF..</text></g><g><title>`0x7FF9639F38E3 (161 samples, 5.29%)</title><rect x="10.4399%" y="245" width="5.2856%" height="15" fill="rgb(228,22,38)" fg:x="318" fg:w="161"/><text x="10.6899%" y="255.50">`0x7FF..</text></g><g><title>`0x7FF9639F27F0 (7 samples, 0.23%)</title><rect x="15.4957%" y="229" width="0.2298%" height="15" fill="rgb(235,168,5)" fg:x="472" fg:w="7"/><text x="15.7457%" y="239.50"></text></g><g><title>`0x7FF9639F47B1 (7 samples, 0.23%)</title><rect x="15.4957%" y="213" width="0.2298%" height="15" fill="rgb(221,155,16)" fg:x="472" fg:w="7"/><text x="15.7457%" y="223.50"></text></g><g><title>`0x7FF9639F5B74 (7 samples, 0.23%)</title><rect x="15.4957%" y="197" width="0.2298%" height="15" fill="rgb(215,215,53)" fg:x="472" fg:w="7"/><text x="15.7457%" y="207.50"></text></g><g><title>`0x7FF9639F6F37 (7 samples, 0.23%)</title><rect x="15.4957%" y="181" width="0.2298%" height="15" fill="rgb(223,4,10)" fg:x="472" fg:w="7"/><text x="15.7457%" y="191.50"></text></g><g><title>`0x7FF9639D9B1A (7 samples, 0.23%)</title><rect x="15.4957%" y="165" width="0.2298%" height="15" fill="rgb(234,103,6)" fg:x="472" fg:w="7"/><text x="15.7457%" y="175.50"></text></g><g><title>`0x7FF963A6D3A4 (7 samples, 0.23%)</title><rect x="15.4957%" y="149" width="0.2298%" height="15" fill="rgb(227,97,0)" fg:x="472" fg:w="7"/><text x="15.7457%" y="159.50"></text></g><g><title>profiling.exe`alloc::vec::Vec&lt;enum2$&lt;math_lib::parser::Token&gt;,alloc::alloc::Global&gt;::as_mut_ptr (5 samples, 0.16%)</title><rect x="15.7255%" y="341" width="0.1641%" height="15" fill="rgb(234,150,53)" fg:x="479" fg:w="5"/><text x="15.9755%" y="351.50"></text></g><g><title>profiling.exe`alloc::vec::Vec&lt;enum2$&lt;math_lib::parser::Token&gt;,alloc::alloc::Global&gt;::push(enum2$ (516 samples, 16.94%)</title><rect x="10.4399%" y="357" width="16.9402%" height="15" fill="rgb(228,201,54)" fg:x="318" fg:w="516"/><text x="10.6899%" y="367.50">profiling.exe`alloc::vec::..</text></g><g><title>profiling.exe`core::ptr::write(enum2$&lt;math_lib::parser::Token&gt;*, enum2$ (350 samples, 11.49%)</title><rect x="15.8897%" y="341" width="11.4905%" height="15" fill="rgb(222,22,37)" fg:x="484" fg:w="350"/><text x="16.1397%" y="351.50">profiling.exe`cor..</text></g><g><title>profiling.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;alloc::vec::Vec (1 samples, 0.03%)</title><rect x="27.3802%" y="357" width="0.0328%" height="15" fill="rgb(237,53,32)" fg:x="834" fg:w="1"/><text x="27.6302%" y="367.50"></text></g><g><title>profiling.exe`alloc::vec::impl$24::drop(alloc::vec::Vec&lt;alloc::vec::Vec (1 samples, 0.03%)</title><rect x="27.3802%" y="341" width="0.0328%" height="15" fill="rgb(233,25,53)" fg:x="834" fg:w="1"/><text x="27.6302%" y="351.50"></text></g><g><title>profiling.exe`alloc::vec::Vec&lt;alloc::vec::Vec&lt;char,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;::as_mut_ptr (1 samples, 0.03%)</title><rect x="27.3802%" y="325" width="0.0328%" height="15" fill="rgb(210,40,34)" fg:x="834" fg:w="1"/><text x="27.6302%" y="335.50"></text></g><g><title>profiling.exe`alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;char,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;::ptr (1 samples, 0.03%)</title><rect x="27.3802%" y="309" width="0.0328%" height="15" fill="rgb(241,220,44)" fg:x="834" fg:w="1"/><text x="27.6302%" y="319.50"></text></g><g><title>`0x7FF9639F47B1 (1 samples, 0.03%)</title><rect x="27.3802%" y="293" width="0.0328%" height="15" fill="rgb(235,28,35)" fg:x="834" fg:w="1"/><text x="27.6302%" y="303.50"></text></g><g><title>`0x7FF9639F5B74 (1 samples, 0.03%)</title><rect x="27.3802%" y="277" width="0.0328%" height="15" fill="rgb(210,56,17)" fg:x="834" fg:w="1"/><text x="27.6302%" y="287.50"></text></g><g><title>`0x7FF9639F6F37 (1 samples, 0.03%)</title><rect x="27.3802%" y="261" width="0.0328%" height="15" fill="rgb(224,130,29)" fg:x="834" fg:w="1"/><text x="27.6302%" y="271.50"></text></g><g><title>`0x7FF9639D9B1A (1 samples, 0.03%)</title><rect x="27.3802%" y="245" width="0.0328%" height="15" fill="rgb(235,212,8)" fg:x="834" fg:w="1"/><text x="27.6302%" y="255.50"></text></g><g><title>`0x7FF963A6D3A4 (1 samples, 0.03%)</title><rect x="27.3802%" y="229" width="0.0328%" height="15" fill="rgb(223,33,50)" fg:x="834" fg:w="1"/><text x="27.6302%" y="239.50"></text></g><g><title>profiling.exe`core::slice::impl$0::last(ref$&lt;slice2$&lt;enum2$ (31 samples, 1.02%)</title><rect x="27.4130%" y="357" width="1.0177%" height="15" fill="rgb(219,149,13)" fg:x="835" fg:w="31"/><text x="27.6630%" y="367.50"></text></g><g><title>profiling.exe`core::ptr::read(enum2$ (41 samples, 1.35%)</title><rect x="28.8247%" y="293" width="1.3460%" height="15" fill="rgb(250,156,29)" fg:x="878" fg:w="41"/><text x="29.0747%" y="303.50"></text></g><g><title>profiling.exe`core::slice::impl$0::reverse(ref_mut$&lt;slice2$&lt;enum2$ (63 samples, 2.07%)</title><rect x="28.4307%" y="357" width="2.0683%" height="15" fill="rgb(216,193,19)" fg:x="866" fg:w="63"/><text x="28.6807%" y="367.50">p..</text></g><g><title>profiling.exe`core::slice::impl$0::reverse::revswap(ref_mut$&lt;slice2$&lt;enum2$&lt;math_lib::parser::Token&gt; &gt; &gt;, ref_mut$&lt;slice2$&lt;enum2$ (63 samples, 2.07%)</title><rect x="28.4307%" y="341" width="2.0683%" height="15" fill="rgb(216,135,14)" fg:x="866" fg:w="63"/><text x="28.6807%" y="351.50">p..</text></g><g><title>profiling.exe`core::mem::swap(enum2$&lt;math_lib::parser::Token&gt;*, enum2$ (51 samples, 1.67%)</title><rect x="28.8247%" y="325" width="1.6743%" height="15" fill="rgb(241,47,5)" fg:x="878" fg:w="51"/><text x="29.0747%" y="335.50"></text></g><g><title>profiling.exe`core::mem::swap_simple(enum2$&lt;math_lib::parser::Token&gt;*, enum2$ (51 samples, 1.67%)</title><rect x="28.8247%" y="309" width="1.6743%" height="15" fill="rgb(233,42,35)" fg:x="878" fg:w="51"/><text x="29.0747%" y="319.50"></text></g><g><title>profiling.exe`core::ptr::write(enum2$&lt;math_lib::parser::Token&gt;*, enum2$ (10 samples, 0.33%)</title><rect x="30.1707%" y="293" width="0.3283%" height="15" fill="rgb(231,13,6)" fg:x="919" fg:w="10"/><text x="30.4207%" y="303.50"></text></g><g><title>profiling.exe`enum2$&lt;core::option::Option&lt;enum2$&lt;math_lib::parser::Token&gt; &gt; &gt;::expect(enum2$&lt;core::option::Option&lt;enum2$&lt;math_lib::parser::Token&gt; &gt; &gt;, ref$ (144 samples, 4.73%)</title><rect x="30.4990%" y="357" width="4.7275%" height="15" fill="rgb(207,181,40)" fg:x="929" fg:w="144"/><text x="30.7490%" y="367.50">profil..</text></g><g><title>profiling.exe`enum2$&lt;core::option::Option&lt;enum2$&lt;math_lib::parser::Token&gt; &gt; &gt;::unwrap(enum2$&lt;core::option::Option&lt;enum2$ (18 samples, 0.59%)</title><rect x="35.2265%" y="357" width="0.5909%" height="15" fill="rgb(254,173,49)" fg:x="1073" fg:w="18"/><text x="35.4765%" y="367.50"></text></g><g><title>profiling.exe`enum2$&lt;core::option::Option&lt;ref$&lt;enum2$&lt;math_lib::parser::Token&gt; &gt; &gt; &gt;::cloned(enum2$&lt;core::option::Option&lt;ref$&lt;enum2$ (29 samples, 0.95%)</title><rect x="35.8175%" y="357" width="0.9521%" height="15" fill="rgb(221,1,38)" fg:x="1091" fg:w="29"/><text x="36.0675%" y="367.50"></text></g><g><title>profiling.exe`math_lib::parser::impl$7::clone(enum2$ (18 samples, 0.59%)</title><rect x="36.1786%" y="341" width="0.5909%" height="15" fill="rgb(206,124,46)" fg:x="1102" fg:w="18"/><text x="36.4286%" y="351.50"></text></g><g><title>profiling.exe`math_lib::parser::to_postfix(alloc::vec::Vec&lt;enum2$ (862 samples, 28.30%)</title><rect x="8.7984%" y="373" width="28.2994%" height="15" fill="rgb(249,21,11)" fg:x="268" fg:w="862"/><text x="9.0484%" y="383.50">profiling.exe`math_lib::parser::to_postfix(al..</text></g><g><title>profiling.exe`enum2$&lt;math_lib::parser::Token&gt;::precedence_index (10 samples, 0.33%)</title><rect x="36.7695%" y="357" width="0.3283%" height="15" fill="rgb(222,201,40)" fg:x="1120" fg:w="10"/><text x="37.0195%" y="367.50"></text></g><g><title>profiling.exe`alloc::string::String::push (126 samples, 4.14%)</title><rect x="50.6238%" y="357" width="4.1366%" height="15" fill="rgb(235,61,29)" fg:x="1542" fg:w="126"/><text x="50.8738%" y="367.50">profi..</text></g><g><title>profiling.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::push (125 samples, 4.10%)</title><rect x="50.6566%" y="341" width="4.1037%" height="15" fill="rgb(219,207,3)" fg:x="1543" fg:w="125"/><text x="50.9066%" y="351.50">prof..</text></g><g><title>profiling.exe`core::ptr::write (3 samples, 0.10%)</title><rect x="54.6619%" y="325" width="0.0985%" height="15" fill="rgb(222,56,46)" fg:x="1665" fg:w="3"/><text x="54.9119%" y="335.50"></text></g><g><title>`0x7FF963A74013 (74 samples, 2.43%)</title><rect x="54.7603%" y="213" width="2.4294%" height="15" fill="rgb(239,76,54)" fg:x="1668" fg:w="74"/><text x="55.0103%" y="223.50">`0..</text></g><g><title>`0x7FF963A74017 (4 samples, 0.13%)</title><rect x="57.1898%" y="213" width="0.1313%" height="15" fill="rgb(231,124,27)" fg:x="1742" fg:w="4"/><text x="57.4398%" y="223.50"></text></g><g><title>`0x7FF963A7401B (1 samples, 0.03%)</title><rect x="57.3211%" y="213" width="0.0328%" height="15" fill="rgb(249,195,6)" fg:x="1746" fg:w="1"/><text x="57.5711%" y="223.50"></text></g><g><title>`0x7FF963A74020 (1 samples, 0.03%)</title><rect x="57.3539%" y="213" width="0.0328%" height="15" fill="rgb(237,174,47)" fg:x="1747" fg:w="1"/><text x="57.6039%" y="223.50"></text></g><g><title>`0x7FF9639F27D9 (81 samples, 2.66%)</title><rect x="54.7603%" y="229" width="2.6592%" height="15" fill="rgb(206,201,31)" fg:x="1668" fg:w="81"/><text x="55.0103%" y="239.50">`0..</text></g><g><title>`0x7FF963A7402F (1 samples, 0.03%)</title><rect x="57.3867%" y="213" width="0.0328%" height="15" fill="rgb(231,57,52)" fg:x="1748" fg:w="1"/><text x="57.6367%" y="223.50"></text></g><g><title>profiling.exe`alloc::raw_vec::RawVec&lt;enum2$&lt;math_lib::parser::Token&gt;,alloc::alloc::Global&gt;::reserve_for_push&lt;enum2$&lt;math_lib::parser::Token&gt;,alloc::alloc::Global&gt; (83 samples, 2.72%)</title><rect x="54.7603%" y="341" width="2.7249%" height="15" fill="rgb(248,177,22)" fg:x="1668" fg:w="83"/><text x="55.0103%" y="351.50">pr..</text></g><g><title>profiling.exe`alloc::raw_vec::RawVec&lt;enum2$&lt;math_lib::parser::Token&gt;,alloc::alloc::Global&gt;::grow_amortized (83 samples, 2.72%)</title><rect x="54.7603%" y="325" width="2.7249%" height="15" fill="rgb(215,211,37)" fg:x="1668" fg:w="83"/><text x="55.0103%" y="335.50">pr..</text></g><g><title>profiling.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (83 samples, 2.72%)</title><rect x="54.7603%" y="309" width="2.7249%" height="15" fill="rgb(241,128,51)" fg:x="1668" fg:w="83"/><text x="55.0103%" y="319.50">pr..</text></g><g><title>profiling.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(enum2$&lt;core::result::Result&lt;core::alloc::layout::Layout,core::alloc::layout::LayoutError&gt; &gt;, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (83 samples, 2.72%)</title><rect x="54.7603%" y="293" width="2.7249%" height="15" fill="rgb(227,165,31)" fg:x="1668" fg:w="83"/><text x="55.0103%" y="303.50">pr..</text></g><g><title>profiling.exe`enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;, alloc::raw_vec::finish_grow::closure_env$1 (83 samples, 2.72%)</title><rect x="54.7603%" y="277" width="2.7249%" height="15" fill="rgb(228,167,24)" fg:x="1668" fg:w="83"/><text x="55.0103%" y="287.50">pr..</text></g><g><title>`0x7FF9639F36BD (83 samples, 2.72%)</title><rect x="54.7603%" y="261" width="2.7249%" height="15" fill="rgb(228,143,12)" fg:x="1668" fg:w="83"/><text x="55.0103%" y="271.50">`0..</text></g><g><title>`0x7FF9639F38E3 (83 samples, 2.72%)</title><rect x="54.7603%" y="245" width="2.7249%" height="15" fill="rgb(249,149,8)" fg:x="1668" fg:w="83"/><text x="55.0103%" y="255.50">`0..</text></g><g><title>`0x7FF9639F27F0 (2 samples, 0.07%)</title><rect x="57.4196%" y="229" width="0.0657%" height="15" fill="rgb(243,35,44)" fg:x="1749" fg:w="2"/><text x="57.6696%" y="239.50"></text></g><g><title>`0x7FF9639F47B1 (2 samples, 0.07%)</title><rect x="57.4196%" y="213" width="0.0657%" height="15" fill="rgb(246,89,9)" fg:x="1749" fg:w="2"/><text x="57.6696%" y="223.50"></text></g><g><title>`0x7FF9639F5B74 (2 samples, 0.07%)</title><rect x="57.4196%" y="197" width="0.0657%" height="15" fill="rgb(233,213,13)" fg:x="1749" fg:w="2"/><text x="57.6696%" y="207.50"></text></g><g><title>`0x7FF9639F6F37 (2 samples, 0.07%)</title><rect x="57.4196%" y="181" width="0.0657%" height="15" fill="rgb(233,141,41)" fg:x="1749" fg:w="2"/><text x="57.6696%" y="191.50"></text></g><g><title>`0x7FF9639D9B1A (2 samples, 0.07%)</title><rect x="57.4196%" y="165" width="0.0657%" height="15" fill="rgb(239,167,4)" fg:x="1749" fg:w="2"/><text x="57.6696%" y="175.50"></text></g><g><title>`0x7FF963A6D3A4 (2 samples, 0.07%)</title><rect x="57.4196%" y="149" width="0.0657%" height="15" fill="rgb(209,217,16)" fg:x="1749" fg:w="2"/><text x="57.6696%" y="159.50"></text></g><g><title>profiling.exe`alloc::vec::Vec&lt;enum2$&lt;math_lib::parser::Token&gt;,alloc::alloc::Global&gt;::push(enum2$ (129 samples, 4.24%)</title><rect x="54.7603%" y="357" width="4.2351%" height="15" fill="rgb(219,88,35)" fg:x="1668" fg:w="129"/><text x="55.0103%" y="367.50">profi..</text></g><g><title>profiling.exe`core::ptr::write(enum2$&lt;math_lib::parser::Token&gt;*, enum2$ (46 samples, 1.51%)</title><rect x="57.4852%" y="341" width="1.5102%" height="15" fill="rgb(220,193,23)" fg:x="1751" fg:w="46"/><text x="57.7352%" y="351.50"></text></g><g><title>profiling.exe`core::char::methods::impl$0::is_digit (4 samples, 0.13%)</title><rect x="58.9954%" y="357" width="0.1313%" height="15" fill="rgb(230,90,52)" fg:x="1797" fg:w="4"/><text x="59.2454%" y="367.50"></text></g><g><title>profiling.exe`core::char::methods::impl$0::to_digit (4 samples, 0.13%)</title><rect x="58.9954%" y="341" width="0.1313%" height="15" fill="rgb(252,106,19)" fg:x="1797" fg:w="4"/><text x="59.2454%" y="351.50"></text></g><g><title>profiling.exe`core::iter::adapters::peekable::Peekable&lt;core::str::iter::Chars&gt;::peek (75 samples, 2.46%)</title><rect x="59.1267%" y="357" width="2.4622%" height="15" fill="rgb(206,74,20)" fg:x="1801" fg:w="75"/><text x="59.3767%" y="367.50">pr..</text></g><g><title>profiling.exe`enum2$&lt;core::option::Option&lt;enum2$&lt;core::option::Option&lt;char&gt; &gt; &gt; &gt;::get_or_insert_with(core::iter::adapters::peekable::impl$5::peek::closure_env$0 (75 samples, 2.46%)</title><rect x="59.1267%" y="341" width="2.4622%" height="15" fill="rgb(230,138,44)" fg:x="1801" fg:w="75"/><text x="59.3767%" y="351.50">pr..</text></g><g><title>profiling.exe`core::iter::adapters::peekable::impl$5::peek::closure$0(core::iter::adapters::peekable::impl$5::peek::closure_env$0 (75 samples, 2.46%)</title><rect x="59.1267%" y="325" width="2.4622%" height="15" fill="rgb(235,182,43)" fg:x="1801" fg:w="75"/><text x="59.3767%" y="335.50">pr..</text></g><g><title>profiling.exe`core::str::iter::impl$0::next (75 samples, 2.46%)</title><rect x="59.1267%" y="309" width="2.4622%" height="15" fill="rgb(242,16,51)" fg:x="1801" fg:w="75"/><text x="59.3767%" y="319.50">pr..</text></g><g><title>profiling.exe`core::str::validations::next_code_point(core::slice::iter::Iter (75 samples, 2.46%)</title><rect x="59.1267%" y="293" width="2.4622%" height="15" fill="rgb(248,9,4)" fg:x="1801" fg:w="75"/><text x="59.3767%" y="303.50">pr..</text></g><g><title>profiling.exe`core::slice::iter::impl$181::next(core::slice::iter::Iter (10 samples, 0.33%)</title><rect x="61.2607%" y="277" width="0.3283%" height="15" fill="rgb(210,31,22)" fg:x="1866" fg:w="10"/><text x="61.5107%" y="287.50"></text></g><g><title>profiling.exe`core::ptr::non_null::impl$12::eq(core::ptr::non_null::NonNull&lt;u8&gt;*, core::ptr::non_null::NonNull (9 samples, 0.30%)</title><rect x="61.2935%" y="261" width="0.2955%" height="15" fill="rgb(239,54,39)" fg:x="1867" fg:w="9"/><text x="61.5435%" y="271.50"></text></g><g><title>profiling.exe`core::iter::adapters::peekable::impl$1::next(core::iter::adapters::peekable::Peekable (29 samples, 0.95%)</title><rect x="61.5890%" y="357" width="0.9521%" height="15" fill="rgb(230,99,41)" fg:x="1876" fg:w="29"/><text x="61.8390%" y="367.50"></text></g><g><title>profiling.exe`core::str::iter::impl$0::next (3 samples, 0.10%)</title><rect x="62.4425%" y="341" width="0.0985%" height="15" fill="rgb(253,106,12)" fg:x="1902" fg:w="3"/><text x="62.6925%" y="351.50"></text></g><g><title>profiling.exe`core::str::validations::next_code_point(core::slice::iter::Iter (3 samples, 0.10%)</title><rect x="62.4425%" y="325" width="0.0985%" height="15" fill="rgb(213,46,41)" fg:x="1902" fg:w="3"/><text x="62.6925%" y="335.50"></text></g><g><title>profiling.exe`alloc::string::impl$38::deref (7 samples, 0.23%)</title><rect x="62.6067%" y="341" width="0.2298%" height="15" fill="rgb(215,133,35)" fg:x="1907" fg:w="7"/><text x="62.8567%" y="351.50"></text></g><g><title>`0x7FF963A74013 (67 samples, 2.20%)</title><rect x="64.5437%" y="197" width="2.1996%" height="15" fill="rgb(213,28,5)" fg:x="1966" fg:w="67"/><text x="64.7937%" y="207.50">`..</text></g><g><title>`0x7FF963A74017 (3 samples, 0.10%)</title><rect x="66.7433%" y="197" width="0.0985%" height="15" fill="rgb(215,77,49)" fg:x="2033" fg:w="3"/><text x="66.9933%" y="207.50"></text></g><g><title>`0x7FF963A74020 (1 samples, 0.03%)</title><rect x="66.8418%" y="197" width="0.0328%" height="15" fill="rgb(248,100,22)" fg:x="2036" fg:w="1"/><text x="67.0918%" y="207.50"></text></g><g><title>`0x7FF963A7402B (3 samples, 0.10%)</title><rect x="66.8746%" y="197" width="0.0985%" height="15" fill="rgb(208,67,9)" fg:x="2037" fg:w="3"/><text x="67.1246%" y="207.50"></text></g><g><title>`0x7FF9639F27D9 (75 samples, 2.46%)</title><rect x="64.5437%" y="213" width="2.4622%" height="15" fill="rgb(219,133,21)" fg:x="1966" fg:w="75"/><text x="64.7937%" y="223.50">`0..</text></g><g><title>`0x7FF963A7402F (1 samples, 0.03%)</title><rect x="66.9731%" y="197" width="0.0328%" height="15" fill="rgb(246,46,29)" fg:x="2040" fg:w="1"/><text x="67.2231%" y="207.50"></text></g><g><title>profiling.exe`alloc::raw_vec::RawVec&lt;enum2$&lt;math_lib::parser::Token&gt;,alloc::alloc::Global&gt;::reserve_for_push&lt;enum2$&lt;math_lib::parser::Token&gt;,alloc::alloc::Global&gt; (80 samples, 2.63%)</title><rect x="64.5437%" y="325" width="2.6264%" height="15" fill="rgb(246,185,52)" fg:x="1966" fg:w="80"/><text x="64.7937%" y="335.50">pr..</text></g><g><title>profiling.exe`alloc::raw_vec::RawVec&lt;enum2$&lt;math_lib::parser::Token&gt;,alloc::alloc::Global&gt;::grow_amortized (80 samples, 2.63%)</title><rect x="64.5437%" y="309" width="2.6264%" height="15" fill="rgb(252,136,11)" fg:x="1966" fg:w="80"/><text x="64.7937%" y="319.50">pr..</text></g><g><title>profiling.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (80 samples, 2.63%)</title><rect x="64.5437%" y="293" width="2.6264%" height="15" fill="rgb(219,138,53)" fg:x="1966" fg:w="80"/><text x="64.7937%" y="303.50">pr..</text></g><g><title>profiling.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(enum2$&lt;core::result::Result&lt;core::alloc::layout::Layout,core::alloc::layout::LayoutError&gt; &gt;, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (80 samples, 2.63%)</title><rect x="64.5437%" y="277" width="2.6264%" height="15" fill="rgb(211,51,23)" fg:x="1966" fg:w="80"/><text x="64.7937%" y="287.50">pr..</text></g><g><title>profiling.exe`enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;, alloc::raw_vec::finish_grow::closure_env$1 (80 samples, 2.63%)</title><rect x="64.5437%" y="261" width="2.6264%" height="15" fill="rgb(247,221,28)" fg:x="1966" fg:w="80"/><text x="64.7937%" y="271.50">pr..</text></g><g><title>`0x7FF9639F36BD (80 samples, 2.63%)</title><rect x="64.5437%" y="245" width="2.6264%" height="15" fill="rgb(251,222,45)" fg:x="1966" fg:w="80"/><text x="64.7937%" y="255.50">`0..</text></g><g><title>`0x7FF9639F38E3 (80 samples, 2.63%)</title><rect x="64.5437%" y="229" width="2.6264%" height="15" fill="rgb(217,162,53)" fg:x="1966" fg:w="80"/><text x="64.7937%" y="239.50">`0..</text></g><g><title>`0x7FF9639F27F0 (5 samples, 0.16%)</title><rect x="67.0059%" y="213" width="0.1641%" height="15" fill="rgb(229,93,14)" fg:x="2041" fg:w="5"/><text x="67.2559%" y="223.50"></text></g><g><title>`0x7FF9639F47B1 (5 samples, 0.16%)</title><rect x="67.0059%" y="197" width="0.1641%" height="15" fill="rgb(209,67,49)" fg:x="2041" fg:w="5"/><text x="67.2559%" y="207.50"></text></g><g><title>`0x7FF9639F5B74 (5 samples, 0.16%)</title><rect x="67.0059%" y="181" width="0.1641%" height="15" fill="rgb(213,87,29)" fg:x="2041" fg:w="5"/><text x="67.2559%" y="191.50"></text></g><g><title>`0x7FF9639F6F37 (5 samples, 0.16%)</title><rect x="67.0059%" y="165" width="0.1641%" height="15" fill="rgb(205,151,52)" fg:x="2041" fg:w="5"/><text x="67.2559%" y="175.50"></text></g><g><title>`0x7FF9639D9B1A (5 samples, 0.16%)</title><rect x="67.0059%" y="149" width="0.1641%" height="15" fill="rgb(253,215,39)" fg:x="2041" fg:w="5"/><text x="67.2559%" y="159.50"></text></g><g><title>`0x7FF963A6D3A4 (5 samples, 0.16%)</title><rect x="67.0059%" y="133" width="0.1641%" height="15" fill="rgb(221,220,41)" fg:x="2041" fg:w="5"/><text x="67.2559%" y="143.50"></text></g><g><title>profiling.exe`alloc::vec::Vec&lt;enum2$&lt;math_lib::parser::Token&gt;,alloc::alloc::Global&gt;::push(enum2$ (177 samples, 5.81%)</title><rect x="62.8365%" y="341" width="5.8109%" height="15" fill="rgb(218,133,21)" fg:x="1914" fg:w="177"/><text x="63.0865%" y="351.50">profili..</text></g><g><title>profiling.exe`core::ptr::write(enum2$&lt;math_lib::parser::Token&gt;*, enum2$ (45 samples, 1.48%)</title><rect x="67.1701%" y="325" width="1.4773%" height="15" fill="rgb(221,193,43)" fg:x="2046" fg:w="45"/><text x="67.4201%" y="335.50"></text></g><g><title>profiling.exe`core::num::dec2flt::lemire::compute_product_approx (15 samples, 0.49%)</title><rect x="72.5542%" y="293" width="0.4924%" height="15" fill="rgb(240,128,52)" fg:x="2210" fg:w="15"/><text x="72.8042%" y="303.50"></text></g><g><title>profiling.exe`core::num::dec2flt::lemire::full_multiplication (6 samples, 0.20%)</title><rect x="72.8496%" y="277" width="0.1970%" height="15" fill="rgb(253,114,12)" fg:x="2219" fg:w="6"/><text x="73.0996%" y="287.50"></text></g><g><title>profiling.exe`core::num::dec2flt::lemire::compute_float&lt;f64&gt; (52 samples, 1.71%)</title><rect x="71.5364%" y="309" width="1.7072%" height="15" fill="rgb(215,223,47)" fg:x="2179" fg:w="52"/><text x="71.7864%" y="319.50"></text></g><g><title>profiling.exe`core::num::impl$9::leading_zeros (6 samples, 0.20%)</title><rect x="73.0466%" y="293" width="0.1970%" height="15" fill="rgb(248,225,23)" fg:x="2225" fg:w="6"/><text x="73.2966%" y="303.50"></text></g><g><title>profiling.exe`core::num::dec2flt::float::impl$1::from_u64 (46 samples, 1.51%)</title><rect x="73.6047%" y="293" width="1.5102%" height="15" fill="rgb(250,108,0)" fg:x="2242" fg:w="46"/><text x="73.8547%" y="303.50"></text></g><g><title>profiling.exe`core::num::dec2flt::number::Number::is_fast_path (3 samples, 0.10%)</title><rect x="75.1149%" y="293" width="0.0985%" height="15" fill="rgb(228,208,7)" fg:x="2288" fg:w="3"/><text x="75.3649%" y="303.50"></text></g><g><title>profiling.exe`core::ops::arith::impl$125::mul (10 samples, 0.33%)</title><rect x="75.2134%" y="293" width="0.3283%" height="15" fill="rgb(244,45,10)" fg:x="2291" fg:w="10"/><text x="75.4634%" y="303.50"></text></g><g><title>profiling.exe`core::num::dec2flt::number::Number::try_fast_path (106 samples, 3.48%)</title><rect x="73.2436%" y="309" width="3.4800%" height="15" fill="rgb(207,125,25)" fg:x="2231" fg:w="106"/><text x="73.4936%" y="319.50">pro..</text></g><g><title>profiling.exe`core::ops::arith::impl$217::div (36 samples, 1.18%)</title><rect x="75.5417%" y="293" width="1.1819%" height="15" fill="rgb(210,195,18)" fg:x="2301" fg:w="36"/><text x="75.7917%" y="303.50"></text></g><g><title>profiling.exe`core::num::dec2flt::parse::try_parse_digits::closure$0 (28 samples, 0.92%)</title><rect x="81.9107%" y="245" width="0.9192%" height="15" fill="rgb(249,80,12)" fg:x="2495" fg:w="28"/><text x="82.1607%" y="255.50"></text></g><g><title>profiling.exe`core::num::impl$9::wrapping_mul (5 samples, 0.16%)</title><rect x="82.6658%" y="229" width="0.1641%" height="15" fill="rgb(221,65,9)" fg:x="2518" fg:w="5"/><text x="82.9158%" y="239.50"></text></g><g><title>profiling.exe`core::num::dec2flt::common::impl$0::parse_digits (123 samples, 4.04%)</title><rect x="78.9232%" y="261" width="4.0381%" height="15" fill="rgb(235,49,36)" fg:x="2404" fg:w="123"/><text x="79.1732%" y="271.50">prof..</text></g><g><title>profiling.exe`core::num::impl$6::wrapping_sub (4 samples, 0.13%)</title><rect x="82.8299%" y="245" width="0.1313%" height="15" fill="rgb(225,32,20)" fg:x="2523" fg:w="4"/><text x="83.0799%" y="255.50"></text></g><g><title>profiling.exe`core::num::dec2flt::common::is_8digits (11 samples, 0.36%)</title><rect x="82.9613%" y="261" width="0.3611%" height="15" fill="rgb(215,141,46)" fg:x="2527" fg:w="11"/><text x="83.2113%" y="271.50"></text></g><g><title>profiling.exe`core::num::impl$9::wrapping_add (3 samples, 0.10%)</title><rect x="83.2239%" y="245" width="0.0985%" height="15" fill="rgb(250,160,47)" fg:x="2535" fg:w="3"/><text x="83.4739%" y="255.50"></text></g><g><title>profiling.exe`core::num::impl$9::wrapping_add (3 samples, 0.10%)</title><rect x="83.8148%" y="245" width="0.0985%" height="15" fill="rgb(216,222,40)" fg:x="2553" fg:w="3"/><text x="84.0648%" y="255.50"></text></g><g><title>profiling.exe`core::num::impl$9::wrapping_mul (21 samples, 0.69%)</title><rect x="83.3224%" y="261" width="0.6894%" height="15" fill="rgb(234,217,39)" fg:x="2538" fg:w="21"/><text x="83.5724%" y="271.50"></text></g><g><title>profiling.exe`core::num::impl$9::wrapping_mul (3 samples, 0.10%)</title><rect x="83.9133%" y="245" width="0.0985%" height="15" fill="rgb(207,178,40)" fg:x="2556" fg:w="3"/><text x="84.1633%" y="255.50"></text></g><g><title>profiling.exe`core::ptr::drop_in_place (2,555 samples, 83.88%)</title><rect x="0.5253%" y="469" width="83.8805%" height="15" fill="rgb(221,136,13)" fg:x="16" fg:w="2555"/><text x="0.7753%" y="479.50">profiling.exe`core::ptr::drop_in_place</text></g><g><title>profiling.exe`core::ptr::drop_in_place(alloc::vec::Vec (2,555 samples, 83.88%)</title><rect x="0.5253%" y="453" width="83.8805%" height="15" fill="rgb(249,199,10)" fg:x="16" fg:w="2555"/><text x="0.7753%" y="463.50">profiling.exe`core::ptr::drop_in_place(alloc::vec::Vec</text></g><g><title>profiling.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (2,555 samples, 83.88%)</title><rect x="0.5253%" y="437" width="83.8805%" height="15" fill="rgb(249,222,13)" fg:x="16" fg:w="2555"/><text x="0.7753%" y="447.50">profiling.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec</text></g><g><title>profiling.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (2,555 samples, 83.88%)</title><rect x="0.5253%" y="421" width="83.8805%" height="15" fill="rgb(244,185,38)" fg:x="16" fg:w="2555"/><text x="0.7753%" y="431.50">profiling.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec</text></g><g><title>profiling.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::current_memory (2,555 samples, 83.88%)</title><rect x="0.5253%" y="405" width="83.8805%" height="15" fill="rgb(236,202,9)" fg:x="16" fg:w="2555"/><text x="0.7753%" y="415.50">profiling.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::current_memory</text></g><g><title>profiling.exe`math_lib::parser::parse(ref$ (2,555 samples, 83.88%)</title><rect x="0.5253%" y="389" width="83.8805%" height="15" fill="rgb(250,229,37)" fg:x="16" fg:w="2555"/><text x="0.7753%" y="399.50">profiling.exe`math_lib::parser::parse(ref$</text></g><g><title>profiling.exe`math_lib::parser::tokenize(ref$ (1,441 samples, 47.31%)</title><rect x="37.0978%" y="373" width="47.3079%" height="15" fill="rgb(206,174,23)" fg:x="1130" fg:w="1441"/><text x="37.3478%" y="383.50">profiling.exe`math_lib::parser::tokenize(ref$</text></g><g><title>profiling.exe`math_lib::parser::process_current_number(alloc::string::String*, alloc::vec::Vec&lt;enum2$ (666 samples, 21.86%)</title><rect x="62.5410%" y="357" width="21.8647%" height="15" fill="rgb(211,33,43)" fg:x="1905" fg:w="666"/><text x="62.7910%" y="367.50">profiling.exe`math_lib::parser::pro..</text></g><g><title>profiling.exe`core::num::dec2flt::impl$3::from_str (480 samples, 15.76%)</title><rect x="68.6474%" y="341" width="15.7584%" height="15" fill="rgb(245,58,50)" fg:x="2091" fg:w="480"/><text x="68.8974%" y="351.50">profiling.exe`core::num:..</text></g><g><title>profiling.exe`core::num::dec2flt::dec2flt (439 samples, 14.41%)</title><rect x="69.9934%" y="325" width="14.4123%" height="15" fill="rgb(244,68,36)" fg:x="2132" fg:w="439"/><text x="70.2434%" y="335.50">profiling.exe`core::nu..</text></g><g><title>profiling.exe`core::num::dec2flt::parse::parse_number (234 samples, 7.68%)</title><rect x="76.7236%" y="309" width="7.6822%" height="15" fill="rgb(232,229,15)" fg:x="2337" fg:w="234"/><text x="76.9736%" y="319.50">profiling.e..</text></g><g><title>profiling.exe`core::num::dec2flt::parse::parse_partial_number (188 samples, 6.17%)</title><rect x="78.2337%" y="293" width="6.1720%" height="15" fill="rgb(254,30,23)" fg:x="2383" fg:w="188"/><text x="78.4837%" y="303.50">profilin..</text></g><g><title>profiling.exe`core::num::dec2flt::parse::try_parse_digits (174 samples, 5.71%)</title><rect x="78.6934%" y="277" width="5.7124%" height="15" fill="rgb(235,160,14)" fg:x="2397" fg:w="174"/><text x="78.9434%" y="287.50">profili..</text></g><g><title>profiling.exe`core::slice::index::impl$0::index (12 samples, 0.39%)</title><rect x="84.0118%" y="261" width="0.3940%" height="15" fill="rgb(212,155,44)" fg:x="2559" fg:w="12"/><text x="84.2618%" y="271.50"></text></g><g><title>profiling.exe`core::slice::index::impl$6::index (12 samples, 0.39%)</title><rect x="84.0118%" y="245" width="0.3940%" height="15" fill="rgb(226,2,50)" fg:x="2559" fg:w="12"/><text x="84.2618%" y="255.50"></text></g><g><title>profiling.exe`core::slice::index::impl$6::get_unchecked (12 samples, 0.39%)</title><rect x="84.0118%" y="229" width="0.3940%" height="15" fill="rgb(234,177,6)" fg:x="2559" fg:w="12"/><text x="84.2618%" y="239.50"></text></g><g><title>profiling.exe`core::slice::index::impl$4::get_unchecked (12 samples, 0.39%)</title><rect x="84.0118%" y="213" width="0.3940%" height="15" fill="rgb(217,24,9)" fg:x="2559" fg:w="12"/><text x="84.2618%" y="223.50"></text></g><g><title>profiling.exe`enum2$&lt;core::result::Result&lt;f64,alloc::string::String&gt; &gt;::is_err (1 samples, 0.03%)</title><rect x="84.4058%" y="469" width="0.0328%" height="15" fill="rgb(220,13,46)" fg:x="2571" fg:w="1"/><text x="84.6558%" y="479.50"></text></g><g><title>profiling.exe`enum2$&lt;core::result::Result&lt;f64,alloc::string::String&gt; &gt;::is_ok (1 samples, 0.03%)</title><rect x="84.4058%" y="453" width="0.0328%" height="15" fill="rgb(239,221,27)" fg:x="2571" fg:w="1"/><text x="84.6558%" y="463.50"></text></g><g><title>`0x7FF9639F47B1 (1 samples, 0.03%)</title><rect x="84.4058%" y="437" width="0.0328%" height="15" fill="rgb(222,198,25)" fg:x="2571" fg:w="1"/><text x="84.6558%" y="447.50"></text></g><g><title>`0x7FF9639F5B74 (1 samples, 0.03%)</title><rect x="84.4058%" y="421" width="0.0328%" height="15" fill="rgb(211,99,13)" fg:x="2571" fg:w="1"/><text x="84.6558%" y="431.50"></text></g><g><title>`0x7FF9639F6F37 (1 samples, 0.03%)</title><rect x="84.4058%" y="405" width="0.0328%" height="15" fill="rgb(232,111,31)" fg:x="2571" fg:w="1"/><text x="84.6558%" y="415.50"></text></g><g><title>`0x7FF9639D9B1A (1 samples, 0.03%)</title><rect x="84.4058%" y="389" width="0.0328%" height="15" fill="rgb(245,82,37)" fg:x="2571" fg:w="1"/><text x="84.6558%" y="399.50"></text></g><g><title>`0x7FF963A6D3A4 (1 samples, 0.03%)</title><rect x="84.4058%" y="373" width="0.0328%" height="15" fill="rgb(227,149,46)" fg:x="2571" fg:w="1"/><text x="84.6558%" y="383.50"></text></g><g><title>profiling.exe`core::result::Result::is_err (10 samples, 0.33%)</title><rect x="84.4386%" y="325" width="0.3283%" height="15" fill="rgb(218,36,50)" fg:x="2572" fg:w="10"/><text x="84.6886%" y="335.50"></text></g><g><title>profiling.exe`core::result::Result::is_ok (10 samples, 0.33%)</title><rect x="84.4386%" y="309" width="0.3283%" height="15" fill="rgb(226,80,48)" fg:x="2572" fg:w="10"/><text x="84.6886%" y="319.50"></text></g><g><title>profiling.exe`core::str::converts::from_utf8 (10 samples, 0.33%)</title><rect x="84.4386%" y="293" width="0.3283%" height="15" fill="rgb(238,224,15)" fg:x="2572" fg:w="10"/><text x="84.6886%" y="303.50"></text></g><g><title>profiling.exe`core::str::validations::run_utf8_validation (10 samples, 0.33%)</title><rect x="84.4386%" y="277" width="0.3283%" height="15" fill="rgb(241,136,10)" fg:x="2572" fg:w="10"/><text x="84.6886%" y="287.50"></text></g><g><title>`0x7FF963A74004 (1 samples, 0.03%)</title><rect x="84.7669%" y="101" width="0.0328%" height="15" fill="rgb(208,32,45)" fg:x="2582" fg:w="1"/><text x="85.0169%" y="111.50"></text></g><g><title>`0x7FF963A74013 (37 samples, 1.21%)</title><rect x="84.7997%" y="101" width="1.2147%" height="15" fill="rgb(207,135,9)" fg:x="2583" fg:w="37"/><text x="85.0497%" y="111.50"></text></g><g><title>`0x7FF963A74017 (2 samples, 0.07%)</title><rect x="86.0144%" y="101" width="0.0657%" height="15" fill="rgb(206,86,44)" fg:x="2620" fg:w="2"/><text x="86.2644%" y="111.50"></text></g><g><title>`0x7FF963A74020 (1 samples, 0.03%)</title><rect x="86.0801%" y="101" width="0.0328%" height="15" fill="rgb(245,177,15)" fg:x="2622" fg:w="1"/><text x="86.3301%" y="111.50"></text></g><g><title>`0x7FF9639F27D9 (42 samples, 1.38%)</title><rect x="84.7669%" y="117" width="1.3789%" height="15" fill="rgb(206,64,50)" fg:x="2582" fg:w="42"/><text x="85.0169%" y="127.50"></text></g><g><title>`0x7FF963A74027 (1 samples, 0.03%)</title><rect x="86.1129%" y="101" width="0.0328%" height="15" fill="rgb(234,36,40)" fg:x="2623" fg:w="1"/><text x="86.3629%" y="111.50"></text></g><g><title>profiling.exe`alloc::vec::Vec::spare_capacity_mut (46 samples, 1.51%)</title><rect x="84.7669%" y="261" width="1.5102%" height="15" fill="rgb(213,64,8)" fg:x="2582" fg:w="46"/><text x="85.0169%" y="271.50"></text></g><g><title>profiling.exe`alloc::raw_vec::RawVec::capacity (46 samples, 1.51%)</title><rect x="84.7669%" y="245" width="1.5102%" height="15" fill="rgb(210,75,36)" fg:x="2582" fg:w="46"/><text x="85.0169%" y="255.50"></text></g><g><title>profiling.exe`alloc::raw_vec::impl$2::reserve::do_reserve_and_handle&lt;u8,alloc::alloc::Global&gt; (46 samples, 1.51%)</title><rect x="84.7669%" y="229" width="1.5102%" height="15" fill="rgb(229,88,21)" fg:x="2582" fg:w="46"/><text x="85.0169%" y="239.50"></text></g><g><title>profiling.exe`alloc::raw_vec::RawVec::grow_amortized (46 samples, 1.51%)</title><rect x="84.7669%" y="213" width="1.5102%" height="15" fill="rgb(252,204,47)" fg:x="2582" fg:w="46"/><text x="85.0169%" y="223.50"></text></g><g><title>profiling.exe`core::result::impl$26::branch (46 samples, 1.51%)</title><rect x="84.7669%" y="197" width="1.5102%" height="15" fill="rgb(208,77,27)" fg:x="2582" fg:w="46"/><text x="85.0169%" y="207.50"></text></g><g><title>profiling.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(enum2$&lt;core::result::Result&lt;core::alloc::layout::Layout,core::alloc::layout::LayoutError&gt; &gt;, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (46 samples, 1.51%)</title><rect x="84.7669%" y="181" width="1.5102%" height="15" fill="rgb(221,76,26)" fg:x="2582" fg:w="46"/><text x="85.0169%" y="191.50"></text></g><g><title>profiling.exe`enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;, alloc::raw_vec::finish_grow::closure_env$1 (46 samples, 1.51%)</title><rect x="84.7669%" y="165" width="1.5102%" height="15" fill="rgb(225,139,18)" fg:x="2582" fg:w="46"/><text x="85.0169%" y="175.50"></text></g><g><title>`0x7FF9639F36BD (46 samples, 1.51%)</title><rect x="84.7669%" y="149" width="1.5102%" height="15" fill="rgb(230,137,11)" fg:x="2582" fg:w="46"/><text x="85.0169%" y="159.50"></text></g><g><title>`0x7FF9639F38E3 (46 samples, 1.51%)</title><rect x="84.7669%" y="133" width="1.5102%" height="15" fill="rgb(212,28,1)" fg:x="2582" fg:w="46"/><text x="85.0169%" y="143.50"></text></g><g><title>`0x7FF9639F27F0 (4 samples, 0.13%)</title><rect x="86.1458%" y="117" width="0.1313%" height="15" fill="rgb(248,164,17)" fg:x="2624" fg:w="4"/><text x="86.3958%" y="127.50"></text></g><g><title>`0x7FF9639F47B1 (4 samples, 0.13%)</title><rect x="86.1458%" y="101" width="0.1313%" height="15" fill="rgb(222,171,42)" fg:x="2624" fg:w="4"/><text x="86.3958%" y="111.50"></text></g><g><title>`0x7FF9639F5B74 (4 samples, 0.13%)</title><rect x="86.1458%" y="85" width="0.1313%" height="15" fill="rgb(243,84,45)" fg:x="2624" fg:w="4"/><text x="86.3958%" y="95.50"></text></g><g><title>`0x7FF9639F6F37 (4 samples, 0.13%)</title><rect x="86.1458%" y="69" width="0.1313%" height="15" fill="rgb(252,49,23)" fg:x="2624" fg:w="4"/><text x="86.3958%" y="79.50"></text></g><g><title>`0x7FF9639D9B1A (4 samples, 0.13%)</title><rect x="86.1458%" y="53" width="0.1313%" height="15" fill="rgb(215,19,7)" fg:x="2624" fg:w="4"/><text x="86.3958%" y="63.50"></text></g><g><title>`0x7FF963A6D3A4 (4 samples, 0.13%)</title><rect x="86.1458%" y="37" width="0.1313%" height="15" fill="rgb(238,81,41)" fg:x="2624" fg:w="4"/><text x="86.3958%" y="47.50"></text></g><g><title>`0x7FF955411890 (1 samples, 0.03%)</title><rect x="86.2771%" y="197" width="0.0328%" height="15" fill="rgb(210,199,37)" fg:x="2628" fg:w="1"/><text x="86.5271%" y="207.50"></text></g><g><title>`0x7FF955411899 (5 samples, 0.16%)</title><rect x="86.3099%" y="197" width="0.1641%" height="15" fill="rgb(244,192,49)" fg:x="2629" fg:w="5"/><text x="86.5599%" y="207.50"></text></g><g><title>`0x7FF95541189E (1 samples, 0.03%)</title><rect x="86.4741%" y="197" width="0.0328%" height="15" fill="rgb(226,211,11)" fg:x="2634" fg:w="1"/><text x="86.7241%" y="207.50"></text></g><g><title>`0x7FF9554118A3 (4 samples, 0.13%)</title><rect x="86.5069%" y="197" width="0.1313%" height="15" fill="rgb(236,162,54)" fg:x="2635" fg:w="4"/><text x="86.7569%" y="207.50"></text></g><g><title>`0x7FF9554118AB (16 samples, 0.53%)</title><rect x="86.6382%" y="197" width="0.5253%" height="15" fill="rgb(220,229,9)" fg:x="2639" fg:w="16"/><text x="86.8882%" y="207.50"></text></g><g><title>`0x7FF9554118B3 (4 samples, 0.13%)</title><rect x="87.1635%" y="197" width="0.1313%" height="15" fill="rgb(250,87,22)" fg:x="2655" fg:w="4"/><text x="87.4135%" y="207.50"></text></g><g><title>profiling.exe`core::intrinsics::write_bytes (35 samples, 1.15%)</title><rect x="86.2771%" y="213" width="1.1490%" height="15" fill="rgb(239,43,17)" fg:x="2628" fg:w="35"/><text x="86.5271%" y="223.50"></text></g><g><title>`0x7FF9554118C3 (4 samples, 0.13%)</title><rect x="87.2948%" y="197" width="0.1313%" height="15" fill="rgb(231,177,25)" fg:x="2659" fg:w="4"/><text x="87.5448%" y="207.50"></text></g><g><title>profiling.exe`__chkstk() (1 samples, 0.03%)</title><rect x="87.4261%" y="197" width="0.0328%" height="15" fill="rgb(219,179,1)" fg:x="2663" fg:w="1"/><text x="87.6761%" y="207.50"></text></g><g><title>profiling.exe`std::sys::windows::handle::Handle::read (9 samples, 0.30%)</title><rect x="87.4590%" y="197" width="0.2955%" height="15" fill="rgb(238,219,53)" fg:x="2664" fg:w="9"/><text x="87.7090%" y="207.50"></text></g><g><title>profiling.exe`std::sys::windows::handle::Handle::synchronous_read (9 samples, 0.30%)</title><rect x="87.4590%" y="181" width="0.2955%" height="15" fill="rgb(232,167,36)" fg:x="2664" fg:w="9"/><text x="87.7090%" y="191.50"></text></g><g><title>`0x7FF963A6D0A4 (9 samples, 0.30%)</title><rect x="87.4590%" y="165" width="0.2955%" height="15" fill="rgb(244,19,51)" fg:x="2664" fg:w="9"/><text x="87.7090%" y="175.50"></text></g><g><title>profiling.exe`enum2$&lt;core::result::Result&lt;usize,std::io::error::Error&gt; &gt;::unwrap_or(enum2$&lt;core::result::Result (102 samples, 3.35%)</title><rect x="84.4386%" y="469" width="3.3487%" height="15" fill="rgb(224,6,22)" fg:x="2572" fg:w="102"/><text x="84.6886%" y="479.50">pro..</text></g><g><title>profiling.exe`std::io::stdio::impl$5::read_to_string (102 samples, 3.35%)</title><rect x="84.4386%" y="453" width="3.3487%" height="15" fill="rgb(224,145,5)" fg:x="2572" fg:w="102"/><text x="84.6886%" y="463.50">pro..</text></g><g><title>profiling.exe`core::ptr::drop_in_place (102 samples, 3.35%)</title><rect x="84.4386%" y="437" width="3.3487%" height="15" fill="rgb(234,130,49)" fg:x="2572" fg:w="102"/><text x="84.6886%" y="447.50">pro..</text></g><g><title>profiling.exe`core::ptr::drop_in_place (102 samples, 3.35%)</title><rect x="84.4386%" y="421" width="3.3487%" height="15" fill="rgb(254,6,2)" fg:x="2572" fg:w="102"/><text x="84.6886%" y="431.50">pro..</text></g><g><title>profiling.exe`std::sync::mutex::impl$12::drop (102 samples, 3.35%)</title><rect x="84.4386%" y="405" width="3.3487%" height="15" fill="rgb(208,96,46)" fg:x="2572" fg:w="102"/><text x="84.6886%" y="415.50">pro..</text></g><g><title>profiling.exe`std::sync::poison::Flag::done (102 samples, 3.35%)</title><rect x="84.4386%" y="389" width="3.3487%" height="15" fill="rgb(239,3,39)" fg:x="2572" fg:w="102"/><text x="84.6886%" y="399.50">pro..</text></g><g><title>profiling.exe`std::io::stdio::impl$6::read_to_string (102 samples, 3.35%)</title><rect x="84.4386%" y="373" width="3.3487%" height="15" fill="rgb(233,210,1)" fg:x="2572" fg:w="102"/><text x="84.6886%" y="383.50">pro..</text></g><g><title>profiling.exe`std::io::buffered::bufreader::impl$4::read_to_string (102 samples, 3.35%)</title><rect x="84.4386%" y="357" width="3.3487%" height="15" fill="rgb(244,137,37)" fg:x="2572" fg:w="102"/><text x="84.6886%" y="367.50">pro..</text></g><g><title>profiling.exe`std::io::append_to_string (102 samples, 3.35%)</title><rect x="84.4386%" y="341" width="3.3487%" height="15" fill="rgb(240,136,2)" fg:x="2572" fg:w="102"/><text x="84.6886%" y="351.50">pro..</text></g><g><title>profiling.exe`std::io::buffered::bufreader::impl$4::read_to_end&lt;std::io::stdio::StdinRaw&gt; (92 samples, 3.02%)</title><rect x="84.7669%" y="325" width="3.0204%" height="15" fill="rgb(239,18,37)" fg:x="2582" fg:w="92"/><text x="85.0169%" y="335.50">pro..</text></g><g><title>profiling.exe`std::io::stdio::impl$0::read_to_end (92 samples, 3.02%)</title><rect x="84.7669%" y="309" width="3.0204%" height="15" fill="rgb(218,185,22)" fg:x="2582" fg:w="92"/><text x="85.0169%" y="319.50">pro..</text></g><g><title>profiling.exe`std::io::stdio::handle_ebadf (92 samples, 3.02%)</title><rect x="84.7669%" y="293" width="3.0204%" height="15" fill="rgb(225,218,4)" fg:x="2582" fg:w="92"/><text x="85.0169%" y="303.50">pro..</text></g><g><title>profiling.exe`std::io::default_read_to_end&lt;std::sys::windows::stdio::Stdin&gt; (92 samples, 3.02%)</title><rect x="84.7669%" y="277" width="3.0204%" height="15" fill="rgb(230,182,32)" fg:x="2582" fg:w="92"/><text x="85.0169%" y="287.50">pro..</text></g><g><title>profiling.exe`std::io::Read::read_buf (46 samples, 1.51%)</title><rect x="86.2771%" y="261" width="1.5102%" height="15" fill="rgb(242,56,43)" fg:x="2628" fg:w="46"/><text x="86.5271%" y="271.50"></text></g><g><title>profiling.exe`std::io::default_read_buf (46 samples, 1.51%)</title><rect x="86.2771%" y="245" width="1.5102%" height="15" fill="rgb(233,99,24)" fg:x="2628" fg:w="46"/><text x="86.5271%" y="255.50"></text></g><g><title>profiling.exe`core::io::borrowed_buf::BorrowedCursor::ensure_init (46 samples, 1.51%)</title><rect x="86.2771%" y="229" width="1.5102%" height="15" fill="rgb(234,209,42)" fg:x="2628" fg:w="46"/><text x="86.5271%" y="239.50"></text></g><g><title>profiling.exe`std::sys::windows::stdio::impl$2::read (11 samples, 0.36%)</title><rect x="87.4261%" y="213" width="0.3611%" height="15" fill="rgb(227,7,12)" fg:x="2663" fg:w="11"/><text x="87.6761%" y="223.50"></text></g><g><title>profiling.exe`std::sys::windows::stdio::is_console (1 samples, 0.03%)</title><rect x="87.7544%" y="197" width="0.0328%" height="15" fill="rgb(245,203,43)" fg:x="2673" fg:w="1"/><text x="88.0044%" y="207.50"></text></g><g><title>`0x7FF9616516B0 (1 samples, 0.03%)</title><rect x="87.7544%" y="181" width="0.0328%" height="15" fill="rgb(238,205,33)" fg:x="2673" fg:w="1"/><text x="88.0044%" y="191.50"></text></g><g><title>`0x7FF963A6D0C4 (1 samples, 0.03%)</title><rect x="87.7544%" y="165" width="0.0328%" height="15" fill="rgb(231,56,7)" fg:x="2673" fg:w="1"/><text x="88.0044%" y="175.50"></text></g><g><title>profiling.exe`alloc::string::String::push (10 samples, 0.33%)</title><rect x="87.9842%" y="453" width="0.3283%" height="15" fill="rgb(244,186,29)" fg:x="2680" fg:w="10"/><text x="88.2342%" y="463.50"></text></g><g><title>profiling.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::push (10 samples, 0.33%)</title><rect x="87.9842%" y="437" width="0.3283%" height="15" fill="rgb(234,111,31)" fg:x="2680" fg:w="10"/><text x="88.2342%" y="447.50"></text></g><g><title>profiling.exe`core::ptr::write (4 samples, 0.13%)</title><rect x="88.1812%" y="421" width="0.1313%" height="15" fill="rgb(241,149,10)" fg:x="2686" fg:w="4"/><text x="88.4312%" y="431.50"></text></g><g><title>`0x7FF9554110CE (1 samples, 0.03%)</title><rect x="88.3125%" y="389" width="0.0328%" height="15" fill="rgb(249,206,44)" fg:x="2690" fg:w="1"/><text x="88.5625%" y="399.50"></text></g><g><title>`0x7FF9554111E4 (2 samples, 0.07%)</title><rect x="88.3454%" y="389" width="0.0657%" height="15" fill="rgb(251,153,30)" fg:x="2691" fg:w="2"/><text x="88.5954%" y="399.50"></text></g><g><title>`0x7FF9554111EA (5 samples, 0.16%)</title><rect x="88.4110%" y="389" width="0.1641%" height="15" fill="rgb(239,152,38)" fg:x="2693" fg:w="5"/><text x="88.6610%" y="399.50"></text></g><g><title>`0x7FF9554111F1 (21 samples, 0.69%)</title><rect x="88.5752%" y="389" width="0.6894%" height="15" fill="rgb(249,139,47)" fg:x="2698" fg:w="21"/><text x="88.8252%" y="399.50"></text></g><g><title>`0x7FF9554111F5 (14 samples, 0.46%)</title><rect x="89.2646%" y="389" width="0.4596%" height="15" fill="rgb(244,64,35)" fg:x="2719" fg:w="14"/><text x="89.5146%" y="399.50"></text></g><g><title>`0x7FF9554111FC (5 samples, 0.16%)</title><rect x="89.7242%" y="389" width="0.1641%" height="15" fill="rgb(216,46,15)" fg:x="2733" fg:w="5"/><text x="89.9742%" y="399.50"></text></g><g><title>`0x7FF955412010 (4 samples, 0.13%)</title><rect x="89.8884%" y="389" width="0.1313%" height="15" fill="rgb(250,74,19)" fg:x="2738" fg:w="4"/><text x="90.1384%" y="399.50"></text></g><g><title>profiling.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (3 samples, 0.10%)</title><rect x="90.0197%" y="389" width="0.0985%" height="15" fill="rgb(249,42,33)" fg:x="2742" fg:w="3"/><text x="90.2697%" y="399.50"></text></g><g><title>profiling.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::reserve (7 samples, 0.23%)</title><rect x="90.1182%" y="389" width="0.2298%" height="15" fill="rgb(242,149,17)" fg:x="2745" fg:w="7"/><text x="90.3682%" y="399.50"></text></g><g><title>profiling.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::reserve (7 samples, 0.23%)</title><rect x="90.1182%" y="373" width="0.2298%" height="15" fill="rgb(244,29,21)" fg:x="2745" fg:w="7"/><text x="90.3682%" y="383.50"></text></g><g><title>profiling.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::needs_to_grow (6 samples, 0.20%)</title><rect x="90.1510%" y="357" width="0.1970%" height="15" fill="rgb(220,130,37)" fg:x="2746" fg:w="6"/><text x="90.4010%" y="367.50"></text></g><g><title>profiling.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::capacity (4 samples, 0.13%)</title><rect x="90.2167%" y="341" width="0.1313%" height="15" fill="rgb(211,67,2)" fg:x="2748" fg:w="4"/><text x="90.4667%" y="351.50"></text></g><g><title>profiling.exe`core::ptr::mut_ptr::impl$0::add (2 samples, 0.07%)</title><rect x="90.3480%" y="389" width="0.0657%" height="15" fill="rgb(235,68,52)" fg:x="2752" fg:w="2"/><text x="90.5980%" y="399.50"></text></g><g><title>profiling.exe`alloc::string::String::push_str(ref$ (66 samples, 2.17%)</title><rect x="88.3125%" y="453" width="2.1668%" height="15" fill="rgb(246,142,3)" fg:x="2690" fg:w="66"/><text x="88.5625%" y="463.50">p..</text></g><g><title>profiling.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::extend_from_slice(ref$&lt;slice2$ (66 samples, 2.17%)</title><rect x="88.3125%" y="437" width="2.1668%" height="15" fill="rgb(241,25,7)" fg:x="2690" fg:w="66"/><text x="88.5625%" y="447.50">p..</text></g><g><title>profiling.exe`alloc::vec::spec_extend::impl$4::spec_extend(alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;*, core::slice::iter::Iter (66 samples, 2.17%)</title><rect x="88.3125%" y="421" width="2.1668%" height="15" fill="rgb(242,119,39)" fg:x="2690" fg:w="66"/><text x="88.5625%" y="431.50">p..</text></g><g><title>profiling.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::append_elements(ptr_const$&lt;slice2$ (66 samples, 2.17%)</title><rect x="88.3125%" y="405" width="2.1668%" height="15" fill="rgb(241,98,45)" fg:x="2690" fg:w="66"/><text x="88.5625%" y="415.50">p..</text></g><g><title>profiling.exe`memcpy (2 samples, 0.07%)</title><rect x="90.4137%" y="389" width="0.0657%" height="15" fill="rgb(254,28,30)" fg:x="2754" fg:w="2"/><text x="90.6637%" y="399.50"></text></g><g><title>`0x7FF9639F2615 (1 samples, 0.03%)</title><rect x="90.9061%" y="197" width="0.0328%" height="15" fill="rgb(241,142,54)" fg:x="2769" fg:w="1"/><text x="91.1561%" y="207.50"></text></g><g><title>`0x7FF9639FB44D (1 samples, 0.03%)</title><rect x="90.9061%" y="181" width="0.0328%" height="15" fill="rgb(222,85,15)" fg:x="2769" fg:w="1"/><text x="91.1561%" y="191.50"></text></g><g><title>`0x7FF9639FEEEE (1 samples, 0.03%)</title><rect x="90.9061%" y="165" width="0.0328%" height="15" fill="rgb(210,85,47)" fg:x="2769" fg:w="1"/><text x="91.1561%" y="175.50"></text></g><g><title>`0x7FF963A6C89B (1 samples, 0.03%)</title><rect x="90.9061%" y="149" width="0.0328%" height="15" fill="rgb(224,206,25)" fg:x="2769" fg:w="1"/><text x="91.1561%" y="159.50"></text></g><g><title>`0x7FF9639D9B1A (1 samples, 0.03%)</title><rect x="90.9061%" y="133" width="0.0328%" height="15" fill="rgb(243,201,19)" fg:x="2769" fg:w="1"/><text x="91.1561%" y="143.50"></text></g><g><title>`0x7FF963A6D3A4 (1 samples, 0.03%)</title><rect x="90.9061%" y="117" width="0.0328%" height="15" fill="rgb(236,59,4)" fg:x="2769" fg:w="1"/><text x="91.1561%" y="127.50"></text></g><g><title>`0x7FF9639F27D9 (20 samples, 0.66%)</title><rect x="90.9389%" y="197" width="0.6566%" height="15" fill="rgb(254,179,45)" fg:x="2770" fg:w="20"/><text x="91.1889%" y="207.50"></text></g><g><title>`0x7FF963A74013 (20 samples, 0.66%)</title><rect x="90.9389%" y="181" width="0.6566%" height="15" fill="rgb(226,14,10)" fg:x="2770" fg:w="20"/><text x="91.1889%" y="191.50"></text></g><g><title>profiling.exe`core::ptr::write(ref$&lt;str$&gt;*, ref$ (33 samples, 1.08%)</title><rect x="90.6106%" y="341" width="1.0834%" height="15" fill="rgb(244,27,41)" fg:x="2760" fg:w="33"/><text x="90.8606%" y="351.50"></text></g><g><title>profiling.exe`alloc::raw_vec::RawVec&lt;ref$&lt;str$&gt;,alloc::alloc::Global&gt;::ptr (24 samples, 0.79%)</title><rect x="90.9061%" y="325" width="0.7879%" height="15" fill="rgb(235,35,32)" fg:x="2769" fg:w="24"/><text x="91.1561%" y="335.50"></text></g><g><title>profiling.exe`alloc::raw_vec::impl$2::reserve::do_reserve_and_handle&lt;ref$&lt;str$&gt;,alloc::alloc::Global&gt;(alloc::raw_vec::RawVec&lt;ref$ (24 samples, 0.79%)</title><rect x="90.9061%" y="309" width="0.7879%" height="15" fill="rgb(218,68,31)" fg:x="2769" fg:w="24"/><text x="91.1561%" y="319.50"></text></g><g><title>profiling.exe`alloc::raw_vec::RawVec&lt;ref$&lt;str$&gt;,alloc::alloc::Global&gt;::grow_amortized (24 samples, 0.79%)</title><rect x="90.9061%" y="293" width="0.7879%" height="15" fill="rgb(207,120,37)" fg:x="2769" fg:w="24"/><text x="91.1561%" y="303.50"></text></g><g><title>profiling.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (24 samples, 0.79%)</title><rect x="90.9061%" y="277" width="0.7879%" height="15" fill="rgb(227,98,0)" fg:x="2769" fg:w="24"/><text x="91.1561%" y="287.50"></text></g><g><title>profiling.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(enum2$&lt;core::result::Result&lt;core::alloc::layout::Layout,core::alloc::layout::LayoutError&gt; &gt;, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (24 samples, 0.79%)</title><rect x="90.9061%" y="261" width="0.7879%" height="15" fill="rgb(207,7,3)" fg:x="2769" fg:w="24"/><text x="91.1561%" y="271.50"></text></g><g><title>profiling.exe`enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;, alloc::raw_vec::finish_grow::closure_env$1 (24 samples, 0.79%)</title><rect x="90.9061%" y="245" width="0.7879%" height="15" fill="rgb(206,98,19)" fg:x="2769" fg:w="24"/><text x="91.1561%" y="255.50"></text></g><g><title>`0x7FF9639F36BD (24 samples, 0.79%)</title><rect x="90.9061%" y="229" width="0.7879%" height="15" fill="rgb(217,5,26)" fg:x="2769" fg:w="24"/><text x="91.1561%" y="239.50"></text></g><g><title>`0x7FF9639F38E3 (24 samples, 0.79%)</title><rect x="90.9061%" y="213" width="0.7879%" height="15" fill="rgb(235,190,38)" fg:x="2769" fg:w="24"/><text x="91.1561%" y="223.50"></text></g><g><title>`0x7FF9639F27F0 (3 samples, 0.10%)</title><rect x="91.5955%" y="197" width="0.0985%" height="15" fill="rgb(247,86,24)" fg:x="2790" fg:w="3"/><text x="91.8455%" y="207.50"></text></g><g><title>`0x7FF9639F47B1 (3 samples, 0.10%)</title><rect x="91.5955%" y="181" width="0.0985%" height="15" fill="rgb(205,101,16)" fg:x="2790" fg:w="3"/><text x="91.8455%" y="191.50"></text></g><g><title>`0x7FF9639F5B74 (3 samples, 0.10%)</title><rect x="91.5955%" y="165" width="0.0985%" height="15" fill="rgb(246,168,33)" fg:x="2790" fg:w="3"/><text x="91.8455%" y="175.50"></text></g><g><title>`0x7FF9639F6F37 (3 samples, 0.10%)</title><rect x="91.5955%" y="149" width="0.0985%" height="15" fill="rgb(231,114,1)" fg:x="2790" fg:w="3"/><text x="91.8455%" y="159.50"></text></g><g><title>`0x7FF9639D9B1A (3 samples, 0.10%)</title><rect x="91.5955%" y="133" width="0.0985%" height="15" fill="rgb(207,184,53)" fg:x="2790" fg:w="3"/><text x="91.8455%" y="143.50"></text></g><g><title>`0x7FF963A6D3A4 (3 samples, 0.10%)</title><rect x="91.5955%" y="117" width="0.0985%" height="15" fill="rgb(224,95,51)" fg:x="2790" fg:w="3"/><text x="91.8455%" y="127.50"></text></g><g><title>profiling.exe`core::ptr::non_null::impl$12::eq(core::ptr::non_null::NonNull&lt;u8&gt;*, core::ptr::non_null::NonNull (3 samples, 0.10%)</title><rect x="96.5529%" y="133" width="0.0985%" height="15" fill="rgb(212,188,45)" fg:x="2941" fg:w="3"/><text x="96.8029%" y="143.50"></text></g><g><title>profiling.exe`core::str::iter::impl$5::next (119 samples, 3.91%)</title><rect x="92.8102%" y="197" width="3.9068%" height="15" fill="rgb(223,154,38)" fg:x="2827" fg:w="119"/><text x="93.0602%" y="207.50">prof..</text></g><g><title>profiling.exe`core::str::iter::impl$0::next (119 samples, 3.91%)</title><rect x="92.8102%" y="181" width="3.9068%" height="15" fill="rgb(251,22,52)" fg:x="2827" fg:w="119"/><text x="93.0602%" y="191.50">prof..</text></g><g><title>profiling.exe`core::str::validations::next_code_point(core::slice::iter::Iter (119 samples, 3.91%)</title><rect x="92.8102%" y="165" width="3.9068%" height="15" fill="rgb(229,209,22)" fg:x="2827" fg:w="119"/><text x="93.0602%" y="175.50">prof..</text></g><g><title>profiling.exe`core::slice::iter::impl$181::next(core::slice::iter::Iter (13 samples, 0.43%)</title><rect x="96.2902%" y="149" width="0.4268%" height="15" fill="rgb(234,138,34)" fg:x="2933" fg:w="13"/><text x="96.5402%" y="159.50"></text></g><g><title>profiling.exe`core::slice::iter::Iter&lt;u8&gt;::post_inc_start (2 samples, 0.07%)</title><rect x="96.6513%" y="133" width="0.0657%" height="15" fill="rgb(212,95,11)" fg:x="2944" fg:w="2"/><text x="96.9013%" y="143.50"></text></g><g><title>profiling.exe`core::ptr::non_null::NonNull&lt;u8&gt;::add(core::ptr::non_null::NonNull (2 samples, 0.07%)</title><rect x="96.6513%" y="117" width="0.0657%" height="15" fill="rgb(240,179,47)" fg:x="2944" fg:w="2"/><text x="96.9013%" y="127.50"></text></g><g><title>profiling.exe`alloc::vec::Vec&lt;ref$&lt;str$&gt;,alloc::alloc::Global&gt;::as_ptr (263 samples, 8.63%)</title><rect x="90.4793%" y="437" width="8.6343%" height="15" fill="rgb(240,163,11)" fg:x="2756" fg:w="263"/><text x="90.7293%" y="447.50">profiling.ex..</text></g><g><title>profiling.exe`alloc::raw_vec::RawVec&lt;ref$&lt;str$&gt;,alloc::alloc::Global&gt;::ptr (263 samples, 8.63%)</title><rect x="90.4793%" y="421" width="8.6343%" height="15" fill="rgb(236,37,12)" fg:x="2756" fg:w="263"/><text x="90.7293%" y="431.50">profiling.ex..</text></g><g><title>profiling.exe`alloc::vec::spec_from_iter::impl$0::from_iter&lt;ref$&lt;str$&gt;,core::str::iter::SplitWhitespace&gt; (263 samples, 8.63%)</title><rect x="90.4793%" y="405" width="8.6343%" height="15" fill="rgb(232,164,16)" fg:x="2756" fg:w="263"/><text x="90.7293%" y="415.50">profiling.ex..</text></g><g><title>profiling.exe`alloc::vec::spec_from_iter_nested::impl$0::from_iter (263 samples, 8.63%)</title><rect x="90.4793%" y="389" width="8.6343%" height="15" fill="rgb(244,205,15)" fg:x="2756" fg:w="263"/><text x="90.7293%" y="399.50">profiling.ex..</text></g><g><title>profiling.exe`alloc::vec::spec_extend::impl$0::spec_extend(alloc::vec::Vec&lt;ref$ (263 samples, 8.63%)</title><rect x="90.4793%" y="373" width="8.6343%" height="15" fill="rgb(223,117,47)" fg:x="2756" fg:w="263"/><text x="90.7293%" y="383.50">profiling.ex..</text></g><g><title>profiling.exe`alloc::vec::Vec&lt;ref$&lt;str$&gt;,alloc::alloc::Global&gt;::extend_desugared (263 samples, 8.63%)</title><rect x="90.4793%" y="357" width="8.6343%" height="15" fill="rgb(244,107,35)" fg:x="2756" fg:w="263"/><text x="90.7293%" y="367.50">profiling.ex..</text></g><g><title>profiling.exe`core::str::iter::impl$36::next (226 samples, 7.42%)</title><rect x="91.6940%" y="341" width="7.4196%" height="15" fill="rgb(205,140,8)" fg:x="2793" fg:w="226"/><text x="91.9440%" y="351.50">profiling...</text></g><g><title>profiling.exe`core::iter::adapters::filter::impl$2::next(core::iter::adapters::filter::Filter&lt;core::str::iter::Split (203 samples, 6.66%)</title><rect x="92.4491%" y="325" width="6.6645%" height="15" fill="rgb(228,84,46)" fg:x="2816" fg:w="203"/><text x="92.6991%" y="335.50">profiling..</text></g><g><title>profiling.exe`core::iter::traits::iterator::Iterator::find(core::str::iter::Split (203 samples, 6.66%)</title><rect x="92.4491%" y="309" width="6.6645%" height="15" fill="rgb(254,188,9)" fg:x="2816" fg:w="203"/><text x="92.6991%" y="319.50">profiling..</text></g><g><title>profiling.exe`core::iter::traits::iterator::Iterator::try_fold(core::str::iter::Split&lt;core::str::IsWhitespace&gt;*, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::find::check::closure_env$0&lt;ref$&lt;str$&gt;,ref_mut$ (203 samples, 6.66%)</title><rect x="92.4491%" y="293" width="6.6645%" height="15" fill="rgb(206,112,54)" fg:x="2816" fg:w="203"/><text x="92.6991%" y="303.50">profiling..</text></g><g><title>profiling.exe`core::str::iter::impl$60::next(core::str::iter::Split (203 samples, 6.66%)</title><rect x="92.4491%" y="277" width="6.6645%" height="15" fill="rgb(216,84,49)" fg:x="2816" fg:w="203"/><text x="92.6991%" y="287.50">profiling..</text></g><g><title>profiling.exe`core::str::iter::SplitInternal&lt;core::str::IsWhitespace&gt;::next (203 samples, 6.66%)</title><rect x="92.4491%" y="261" width="6.6645%" height="15" fill="rgb(214,194,35)" fg:x="2816" fg:w="203"/><text x="92.6991%" y="271.50">profiling..</text></g><g><title>profiling.exe`core::str::pattern::impl$25::next_match(core::str::pattern::CharPredicateSearcher (192 samples, 6.30%)</title><rect x="92.8102%" y="245" width="6.3033%" height="15" fill="rgb(249,28,3)" fg:x="2827" fg:w="192"/><text x="93.0602%" y="255.50">profilin..</text></g><g><title>profiling.exe`core::str::pattern::Searcher::next_match(core::str::pattern::MultiCharEqSearcher (192 samples, 6.30%)</title><rect x="92.8102%" y="229" width="6.3033%" height="15" fill="rgb(222,56,52)" fg:x="2827" fg:w="192"/><text x="93.0602%" y="239.50">profilin..</text></g><g><title>profiling.exe`core::str::pattern::impl$9::next(core::str::pattern::MultiCharEqSearcher (192 samples, 6.30%)</title><rect x="92.8102%" y="213" width="6.3033%" height="15" fill="rgb(245,217,50)" fg:x="2827" fg:w="192"/><text x="93.0602%" y="223.50">profilin..</text></g><g><title>profiling.exe`core::str::pattern::impl$4::matches (73 samples, 2.40%)</title><rect x="96.7170%" y="197" width="2.3966%" height="15" fill="rgb(213,201,24)" fg:x="2946" fg:w="73"/><text x="96.9670%" y="207.50">pr..</text></g><g><title>profiling.exe`core::str::impl$18::call_mut (73 samples, 2.40%)</title><rect x="96.7170%" y="181" width="2.3966%" height="15" fill="rgb(248,116,28)" fg:x="2946" fg:w="73"/><text x="96.9670%" y="191.50">pr..</text></g><g><title>profiling.exe`core::str::impl$17::call (73 samples, 2.40%)</title><rect x="96.7170%" y="165" width="2.3966%" height="15" fill="rgb(219,72,43)" fg:x="2946" fg:w="73"/><text x="96.9670%" y="175.50">pr..</text></g><g><title>profiling.exe`core::char::methods::impl$0::is_whitespace (73 samples, 2.40%)</title><rect x="96.7170%" y="149" width="2.3966%" height="15" fill="rgb(209,138,14)" fg:x="2946" fg:w="73"/><text x="96.9670%" y="159.50">pr..</text></g><g><title>profiling.exe`alloc::vec::impl$8::deref(alloc::vec::Vec&lt;ref$ (270 samples, 8.86%)</title><rect x="90.4793%" y="453" width="8.8641%" height="15" fill="rgb(222,18,33)" fg:x="2756" fg:w="270"/><text x="90.7293%" y="463.50">profiling.exe..</text></g><g><title>profiling.exe`core::iter::traits::accum::impl$48::sum(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;ref$ (7 samples, 0.23%)</title><rect x="99.1136%" y="437" width="0.2298%" height="15" fill="rgb(213,199,7)" fg:x="3019" fg:w="7"/><text x="99.3636%" y="447.50"></text></g><g><title>profiling.exe`core::iter::adapters::map::impl$2::fold(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;ref$&lt;str$&gt; &gt;,profiling::prepare_to_parse::closure_env$0&gt;, unsigned long long, core::iter::traits::accum::impl$48::sum::closure_env$0&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;ref$ (7 samples, 0.23%)</title><rect x="99.1136%" y="421" width="0.2298%" height="15" fill="rgb(250,110,10)" fg:x="3019" fg:w="7"/><text x="99.3636%" y="431.50"></text></g><g><title>profiling.exe`core::slice::iter::impl$181::fold(core::slice::iter::Iter&lt;ref$&lt;str$&gt; &gt;, unsigned long long, core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;ref$&lt;str$&gt; &gt;,usize,usize,profiling::prepare_to_parse::closure_env$0,core::iter::traits::accum::impl$48::sum::closure_env$0&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;ref$ (7 samples, 0.23%)</title><rect x="99.1136%" y="405" width="0.2298%" height="15" fill="rgb(248,123,6)" fg:x="3019" fg:w="7"/><text x="99.3636%" y="415.50"></text></g><g><title>profiling.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;ref$&lt;str$&gt; &gt;,usize,usize,profiling::prepare_to_parse::closure_env$0,core::iter::traits::accum::impl$48::sum::closure_env$0&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;ref$&lt;str$&gt; &gt;,profiling::prepare_to_parse::closure_env$0&gt; &gt; &gt;*, unsigned long long, ref$ (7 samples, 0.23%)</title><rect x="99.1136%" y="389" width="0.2298%" height="15" fill="rgb(206,91,31)" fg:x="3019" fg:w="7"/><text x="99.3636%" y="399.50"></text></g><g><title>profiling.exe`core::iter::traits::accum::impl$48::sum::closure$0(core::iter::traits::accum::impl$48::sum::closure_env$0&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;ref$ (7 samples, 0.23%)</title><rect x="99.1136%" y="373" width="0.2298%" height="15" fill="rgb(211,154,13)" fg:x="3019" fg:w="7"/><text x="99.3636%" y="383.50"></text></g><g><title>profiling.exe`core::ptr::drop_in_place (1 samples, 0.03%)</title><rect x="99.3434%" y="453" width="0.0328%" height="15" fill="rgb(225,148,7)" fg:x="3026" fg:w="1"/><text x="99.5934%" y="463.50"></text></g><g><title>profiling.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 0.03%)</title><rect x="99.3434%" y="437" width="0.0328%" height="15" fill="rgb(220,160,43)" fg:x="3026" fg:w="1"/><text x="99.5934%" y="447.50"></text></g><g><title>profiling.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 0.03%)</title><rect x="99.3434%" y="421" width="0.0328%" height="15" fill="rgb(213,52,39)" fg:x="3026" fg:w="1"/><text x="99.5934%" y="431.50"></text></g><g><title>profiling.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (1 samples, 0.03%)</title><rect x="99.3434%" y="405" width="0.0328%" height="15" fill="rgb(243,137,7)" fg:x="3026" fg:w="1"/><text x="99.5934%" y="415.50"></text></g><g><title>profiling.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::current_memory (1 samples, 0.03%)</title><rect x="99.3434%" y="389" width="0.0328%" height="15" fill="rgb(230,79,13)" fg:x="3026" fg:w="1"/><text x="99.5934%" y="399.50"></text></g><g><title>`0x7FF9639F47B1 (1 samples, 0.03%)</title><rect x="99.3434%" y="373" width="0.0328%" height="15" fill="rgb(247,105,23)" fg:x="3026" fg:w="1"/><text x="99.5934%" y="383.50"></text></g><g><title>`0x7FF9639F5B74 (1 samples, 0.03%)</title><rect x="99.3434%" y="357" width="0.0328%" height="15" fill="rgb(223,179,41)" fg:x="3026" fg:w="1"/><text x="99.5934%" y="367.50"></text></g><g><title>`0x7FF9639F6F37 (1 samples, 0.03%)</title><rect x="99.3434%" y="341" width="0.0328%" height="15" fill="rgb(218,9,34)" fg:x="3026" fg:w="1"/><text x="99.5934%" y="351.50"></text></g><g><title>`0x7FF9639D9B1A (1 samples, 0.03%)</title><rect x="99.3434%" y="325" width="0.0328%" height="15" fill="rgb(222,106,8)" fg:x="3026" fg:w="1"/><text x="99.5934%" y="335.50"></text></g><g><title>`0x7FF963A6D3A4 (1 samples, 0.03%)</title><rect x="99.3434%" y="309" width="0.0328%" height="15" fill="rgb(211,220,0)" fg:x="3026" fg:w="1"/><text x="99.5934%" y="319.50"></text></g><g><title>`0x7FF963A226B1 (3,027 samples, 99.38%)</title><rect x="0.0328%" y="693" width="99.3762%" height="15" fill="rgb(229,52,16)" fg:x="1" fg:w="3027"/><text x="0.2828%" y="703.50">`0x7FF963A226B1</text></g><g><title>`0x7FF962BD7344 (3,027 samples, 99.38%)</title><rect x="0.0328%" y="677" width="99.3762%" height="15" fill="rgb(212,155,18)" fg:x="1" fg:w="3027"/><text x="0.2828%" y="687.50">`0x7FF962BD7344</text></g><g><title>profiling.exe`__scrt_common_main_seh() (3,022 samples, 99.21%)</title><rect x="0.1970%" y="661" width="99.2121%" height="15" fill="rgb(242,21,14)" fg:x="6" fg:w="3022"/><text x="0.4470%" y="671.50">profiling.exe`__scrt_common_main_seh()</text></g><g><title>profiling.exe`invoke_main() (3,014 samples, 98.95%)</title><rect x="0.4596%" y="645" width="98.9494%" height="15" fill="rgb(222,19,48)" fg:x="14" fg:w="3014"/><text x="0.7096%" y="655.50">profiling.exe`invoke_main()</text></g><g><title>profiling.exe`main (3,014 samples, 98.95%)</title><rect x="0.4596%" y="629" width="98.9494%" height="15" fill="rgb(232,45,27)" fg:x="14" fg:w="3014"/><text x="0.7096%" y="639.50">profiling.exe`main</text></g><g><title>profiling.exe`std::rt::lang_start_internal (3,014 samples, 98.95%)</title><rect x="0.4596%" y="613" width="98.9494%" height="15" fill="rgb(249,103,42)" fg:x="14" fg:w="3014"/><text x="0.7096%" y="623.50">profiling.exe`std::rt::lang_start_internal</text></g><g><title>profiling.exe`std::panic::catch_unwind (3,014 samples, 98.95%)</title><rect x="0.4596%" y="597" width="98.9494%" height="15" fill="rgb(246,81,33)" fg:x="14" fg:w="3014"/><text x="0.7096%" y="607.50">profiling.exe`std::panic::catch_unwind</text></g><g><title>profiling.exe`std::panicking::try (3,014 samples, 98.95%)</title><rect x="0.4596%" y="581" width="98.9494%" height="15" fill="rgb(252,33,42)" fg:x="14" fg:w="3014"/><text x="0.7096%" y="591.50">profiling.exe`std::panicking::try</text></g><g><title>profiling.exe`std::panicking::try::do_call (3,014 samples, 98.95%)</title><rect x="0.4596%" y="565" width="98.9494%" height="15" fill="rgb(209,212,41)" fg:x="14" fg:w="3014"/><text x="0.7096%" y="575.50">profiling.exe`std::panicking::try::do_call</text></g><g><title>profiling.exe`std::rt::lang_start_internal::closure$2 (3,013 samples, 98.92%)</title><rect x="0.4924%" y="549" width="98.9166%" height="15" fill="rgb(207,154,6)" fg:x="15" fg:w="3013"/><text x="0.7424%" y="559.50">profiling.exe`std::rt::lang_start_internal::closure$2</text></g><g><title>profiling.exe`std::panic::catch_unwind (3,013 samples, 98.92%)</title><rect x="0.4924%" y="533" width="98.9166%" height="15" fill="rgb(223,64,47)" fg:x="15" fg:w="3013"/><text x="0.7424%" y="543.50">profiling.exe`std::panic::catch_unwind</text></g><g><title>profiling.exe`std::rt::lang_start::closure$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::string::String&gt; &gt; &gt;(std::rt::lang_start::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$ (3,013 samples, 98.92%)</title><rect x="0.4924%" y="517" width="98.9166%" height="15" fill="rgb(211,161,38)" fg:x="15" fg:w="3013"/><text x="0.7424%" y="527.50">profiling.exe`std::rt::lang_start::closure$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::string::String&gt; &gt; &gt;(std::rt::lang_start::closure_env$0&lt;enum2$&lt;core::result::..</text></g><g><title>profiling.exe`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::string::String&gt; &gt; (*)(),enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::string::String&gt; &gt; &gt;(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::string::String&gt; &gt; (*) (3,013 samples, 98.92%)</title><rect x="0.4924%" y="501" width="98.9166%" height="15" fill="rgb(219,138,40)" fg:x="15" fg:w="3013"/><text x="0.7424%" y="511.50">profiling.exe`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::string::String&gt; &gt; (*)(),enum2$&lt;core::result::Resul..</text></g><g><title>profiling.exe`profiling::main (3,013 samples, 98.92%)</title><rect x="0.4924%" y="485" width="98.9166%" height="15" fill="rgb(241,228,46)" fg:x="15" fg:w="3013"/><text x="0.7424%" y="495.50">profiling.exe`profiling::main</text></g><g><title>profiling.exe`profiling::prepare_to_parse (354 samples, 11.62%)</title><rect x="87.7873%" y="469" width="11.6218%" height="15" fill="rgb(223,209,38)" fg:x="2674" fg:w="354"/><text x="88.0373%" y="479.50">profiling.exe`pro..</text></g><g><title>profiling.exe`core::slice::iter::impl$181::next(core::slice::iter::Iter&lt;ref$ (1 samples, 0.03%)</title><rect x="99.3762%" y="453" width="0.0328%" height="15" fill="rgb(236,164,45)" fg:x="3027" fg:w="1"/><text x="99.6262%" y="463.50"></text></g><g><title>`0x7FF963AA264C (1 samples, 0.03%)</title><rect x="99.4091%" y="645" width="0.0328%" height="15" fill="rgb(231,15,5)" fg:x="3028" fg:w="1"/><text x="99.6591%" y="655.50"></text></g><g><title>`0x7FF963AC2512 (1 samples, 0.03%)</title><rect x="99.4091%" y="629" width="0.0328%" height="15" fill="rgb(252,35,15)" fg:x="3028" fg:w="1"/><text x="99.6591%" y="639.50"></text></g><g><title>`0x7FF963AC44FB (1 samples, 0.03%)</title><rect x="99.4091%" y="613" width="0.0328%" height="15" fill="rgb(248,181,18)" fg:x="3028" fg:w="1"/><text x="99.6591%" y="623.50"></text></g><g><title>`0x7FF963A39525 (1 samples, 0.03%)</title><rect x="99.4091%" y="597" width="0.0328%" height="15" fill="rgb(233,39,42)" fg:x="3028" fg:w="1"/><text x="99.6591%" y="607.50"></text></g><g><title>`0x7FF963A3959B (1 samples, 0.03%)</title><rect x="99.4091%" y="581" width="0.0328%" height="15" fill="rgb(238,110,33)" fg:x="3028" fg:w="1"/><text x="99.6591%" y="591.50"></text></g><g><title>`0x7FF963A3961C (1 samples, 0.03%)</title><rect x="99.4091%" y="565" width="0.0328%" height="15" fill="rgb(233,195,10)" fg:x="3028" fg:w="1"/><text x="99.6591%" y="575.50"></text></g><g><title>`0x7FF963A397AC (1 samples, 0.03%)</title><rect x="99.4091%" y="549" width="0.0328%" height="15" fill="rgb(254,105,3)" fg:x="3028" fg:w="1"/><text x="99.6591%" y="559.50"></text></g><g><title>`0x7FF963A6FB34 (1 samples, 0.03%)</title><rect x="99.4091%" y="533" width="0.0328%" height="15" fill="rgb(221,225,9)" fg:x="3028" fg:w="1"/><text x="99.6591%" y="543.50"></text></g><g><title>`0x7FF963AA285C (1 samples, 0.03%)</title><rect x="99.4419%" y="645" width="0.0328%" height="15" fill="rgb(224,227,45)" fg:x="3029" fg:w="1"/><text x="99.6919%" y="655.50"></text></g><g><title>`0x7FF963A1DD35 (1 samples, 0.03%)</title><rect x="99.4419%" y="629" width="0.0328%" height="15" fill="rgb(229,198,43)" fg:x="3029" fg:w="1"/><text x="99.6919%" y="639.50"></text></g><g><title>`0x7FF963A1DDE7 (1 samples, 0.03%)</title><rect x="99.4419%" y="613" width="0.0328%" height="15" fill="rgb(206,209,35)" fg:x="3029" fg:w="1"/><text x="99.6919%" y="623.50"></text></g><g><title>`0x7FF963A1DEF1 (1 samples, 0.03%)</title><rect x="99.4419%" y="597" width="0.0328%" height="15" fill="rgb(245,195,53)" fg:x="3029" fg:w="1"/><text x="99.6919%" y="607.50"></text></g><g><title>`0x7FF963A1E290 (1 samples, 0.03%)</title><rect x="99.4419%" y="581" width="0.0328%" height="15" fill="rgb(240,92,26)" fg:x="3029" fg:w="1"/><text x="99.6919%" y="591.50"></text></g><g><title>`0x7FF9639E7E8D (1 samples, 0.03%)</title><rect x="99.4747%" y="517" width="0.0328%" height="15" fill="rgb(207,40,23)" fg:x="3030" fg:w="1"/><text x="99.7247%" y="527.50"></text></g><g><title>`0x7FF9639E7B29 (2 samples, 0.07%)</title><rect x="99.4747%" y="533" width="0.0657%" height="15" fill="rgb(223,111,35)" fg:x="3030" fg:w="2"/><text x="99.7247%" y="543.50"></text></g><g><title>`0x7FF9639E88A8 (1 samples, 0.03%)</title><rect x="99.5076%" y="517" width="0.0328%" height="15" fill="rgb(229,147,28)" fg:x="3031" fg:w="1"/><text x="99.7576%" y="527.50"></text></g><g><title>`0x7FF9639E4479 (1 samples, 0.03%)</title><rect x="99.5076%" y="501" width="0.0328%" height="15" fill="rgb(211,29,28)" fg:x="3031" fg:w="1"/><text x="99.7576%" y="511.50"></text></g><g><title>`0x7FF9639E4AAA (1 samples, 0.03%)</title><rect x="99.5076%" y="485" width="0.0328%" height="15" fill="rgb(228,72,33)" fg:x="3031" fg:w="1"/><text x="99.7576%" y="495.50"></text></g><g><title>`0x7FF9639E4D42 (1 samples, 0.03%)</title><rect x="99.5076%" y="469" width="0.0328%" height="15" fill="rgb(205,214,31)" fg:x="3031" fg:w="1"/><text x="99.7576%" y="479.50"></text></g><g><title>`0x7FF963A6D4E4 (1 samples, 0.03%)</title><rect x="99.5076%" y="453" width="0.0328%" height="15" fill="rgb(224,111,15)" fg:x="3031" fg:w="1"/><text x="99.7576%" y="463.50"></text></g><g><title>`0x7FF9639EFB31 (4 samples, 0.13%)</title><rect x="99.4747%" y="597" width="0.1313%" height="15" fill="rgb(253,21,26)" fg:x="3030" fg:w="4"/><text x="99.7247%" y="607.50"></text></g><g><title>`0x7FF963A3B2BD (4 samples, 0.13%)</title><rect x="99.4747%" y="581" width="0.1313%" height="15" fill="rgb(245,139,43)" fg:x="3030" fg:w="4"/><text x="99.7247%" y="591.50"></text></g><g><title>`0x7FF9639E4479 (4 samples, 0.13%)</title><rect x="99.4747%" y="565" width="0.1313%" height="15" fill="rgb(252,170,7)" fg:x="3030" fg:w="4"/><text x="99.7247%" y="575.50"></text></g><g><title>`0x7FF9639E4C14 (4 samples, 0.13%)</title><rect x="99.4747%" y="549" width="0.1313%" height="15" fill="rgb(231,118,14)" fg:x="3030" fg:w="4"/><text x="99.7247%" y="559.50"></text></g><g><title>`0x7FF9639E7BC4 (2 samples, 0.07%)</title><rect x="99.5404%" y="533" width="0.0657%" height="15" fill="rgb(238,83,0)" fg:x="3032" fg:w="2"/><text x="99.7904%" y="543.50"></text></g><g><title>`0x7FF963A026C6 (2 samples, 0.07%)</title><rect x="99.5404%" y="517" width="0.0657%" height="15" fill="rgb(221,39,39)" fg:x="3032" fg:w="2"/><text x="99.7904%" y="527.50"></text></g><g><title>`0x7FF9639D910E (1 samples, 0.03%)</title><rect x="99.6060%" y="437" width="0.0328%" height="15" fill="rgb(222,119,46)" fg:x="3034" fg:w="1"/><text x="99.8560%" y="447.50"></text></g><g><title>`0x7FF963A6D6C4 (1 samples, 0.03%)</title><rect x="99.6060%" y="421" width="0.0328%" height="15" fill="rgb(222,165,49)" fg:x="3034" fg:w="1"/><text x="99.8560%" y="431.50"></text></g><g><title>`0x7FF96164189D (2 samples, 0.07%)</title><rect x="99.6060%" y="501" width="0.0657%" height="15" fill="rgb(219,113,52)" fg:x="3034" fg:w="2"/><text x="99.8560%" y="511.50"></text></g><g><title>`0x7FF961641C17 (2 samples, 0.07%)</title><rect x="99.6060%" y="485" width="0.0657%" height="15" fill="rgb(214,7,15)" fg:x="3034" fg:w="2"/><text x="99.8560%" y="495.50"></text></g><g><title>`0x7FF961643466 (2 samples, 0.07%)</title><rect x="99.6060%" y="469" width="0.0657%" height="15" fill="rgb(235,32,4)" fg:x="3034" fg:w="2"/><text x="99.8560%" y="479.50"></text></g><g><title>`0x7FF9639D8EF2 (2 samples, 0.07%)</title><rect x="99.6060%" y="453" width="0.0657%" height="15" fill="rgb(238,90,54)" fg:x="3034" fg:w="2"/><text x="99.8560%" y="463.50"></text></g><g><title>`0x7FF9639D9299 (1 samples, 0.03%)</title><rect x="99.6389%" y="437" width="0.0328%" height="15" fill="rgb(213,208,19)" fg:x="3035" fg:w="1"/><text x="99.8889%" y="447.50"></text></g><g><title>`0x7FF963A6D4E4 (1 samples, 0.03%)</title><rect x="99.6389%" y="421" width="0.0328%" height="15" fill="rgb(233,156,4)" fg:x="3035" fg:w="1"/><text x="99.8889%" y="431.50"></text></g><g><title>`0x7FF96161C9E8 (1 samples, 0.03%)</title><rect x="99.6717%" y="421" width="0.0328%" height="15" fill="rgb(207,194,5)" fg:x="3036" fg:w="1"/><text x="99.9217%" y="431.50"></text></g><g><title>`0x7FF963A6E654 (1 samples, 0.03%)</title><rect x="99.6717%" y="405" width="0.0328%" height="15" fill="rgb(206,111,30)" fg:x="3036" fg:w="1"/><text x="99.9217%" y="415.50"></text></g><g><title>`0x7FF9616418C7 (2 samples, 0.07%)</title><rect x="99.6717%" y="501" width="0.0657%" height="15" fill="rgb(243,70,54)" fg:x="3036" fg:w="2"/><text x="99.9217%" y="511.50"></text></g><g><title>`0x7FF96168C337 (2 samples, 0.07%)</title><rect x="99.6717%" y="485" width="0.0657%" height="15" fill="rgb(242,28,8)" fg:x="3036" fg:w="2"/><text x="99.9217%" y="495.50"></text></g><g><title>`0x7FF96168B82E (2 samples, 0.07%)</title><rect x="99.6717%" y="469" width="0.0657%" height="15" fill="rgb(219,106,18)" fg:x="3036" fg:w="2"/><text x="99.9217%" y="479.50"></text></g><g><title>`0x7FF961689CEF (2 samples, 0.07%)</title><rect x="99.6717%" y="453" width="0.0657%" height="15" fill="rgb(244,222,10)" fg:x="3036" fg:w="2"/><text x="99.9217%" y="463.50"></text></g><g><title>`0x7FF96168988C (2 samples, 0.07%)</title><rect x="99.6717%" y="437" width="0.0657%" height="15" fill="rgb(236,179,52)" fg:x="3036" fg:w="2"/><text x="99.9217%" y="447.50"></text></g><g><title>`0x7FF96161CA45 (1 samples, 0.03%)</title><rect x="99.7045%" y="421" width="0.0328%" height="15" fill="rgb(213,23,39)" fg:x="3037" fg:w="1"/><text x="99.9545%" y="431.50"></text></g><g><title>`0x7FF96161D2C9 (1 samples, 0.03%)</title><rect x="99.7045%" y="405" width="0.0328%" height="15" fill="rgb(238,48,10)" fg:x="3037" fg:w="1"/><text x="99.9545%" y="415.50"></text></g><g><title>`0x7FF96161D3C0 (1 samples, 0.03%)</title><rect x="99.7045%" y="389" width="0.0328%" height="15" fill="rgb(251,196,23)" fg:x="3037" fg:w="1"/><text x="99.9545%" y="399.50"></text></g><g><title>`0x7FF961641097 (1 samples, 0.03%)</title><rect x="99.7045%" y="373" width="0.0328%" height="15" fill="rgb(250,152,24)" fg:x="3037" fg:w="1"/><text x="99.9545%" y="383.50"></text></g><g><title>`0x7FF963A6D404 (1 samples, 0.03%)</title><rect x="99.7045%" y="357" width="0.0328%" height="15" fill="rgb(209,150,17)" fg:x="3037" fg:w="1"/><text x="99.9545%" y="367.50"></text></g><g><title>`0x7FF963AA375E (9 samples, 0.30%)</title><rect x="99.4747%" y="645" width="0.2955%" height="15" fill="rgb(234,202,34)" fg:x="3030" fg:w="9"/><text x="99.7247%" y="655.50"></text></g><g><title>`0x7FF9639E6AF4 (9 samples, 0.30%)</title><rect x="99.4747%" y="629" width="0.2955%" height="15" fill="rgb(253,148,53)" fg:x="3030" fg:w="9"/><text x="99.7247%" y="639.50"></text></g><g><title>`0x7FF9639E73E4 (9 samples, 0.30%)</title><rect x="99.4747%" y="613" width="0.2955%" height="15" fill="rgb(218,129,16)" fg:x="3030" fg:w="9"/><text x="99.7247%" y="623.50"></text></g><g><title>`0x7FF9639EFBAE (5 samples, 0.16%)</title><rect x="99.6060%" y="597" width="0.1641%" height="15" fill="rgb(216,85,19)" fg:x="3034" fg:w="5"/><text x="99.8560%" y="607.50"></text></g><g><title>`0x7FF963A0D947 (5 samples, 0.16%)</title><rect x="99.6060%" y="581" width="0.1641%" height="15" fill="rgb(235,228,7)" fg:x="3034" fg:w="5"/><text x="99.8560%" y="591.50"></text></g><g><title>`0x7FF963A3C0E0 (5 samples, 0.16%)</title><rect x="99.6060%" y="565" width="0.1641%" height="15" fill="rgb(245,175,0)" fg:x="3034" fg:w="5"/><text x="99.8560%" y="575.50"></text></g><g><title>`0x7FF963A3C05A (5 samples, 0.16%)</title><rect x="99.6060%" y="549" width="0.1641%" height="15" fill="rgb(208,168,36)" fg:x="3034" fg:w="5"/><text x="99.8560%" y="559.50"></text></g><g><title>`0x7FF963A3C2C7 (5 samples, 0.16%)</title><rect x="99.6060%" y="533" width="0.1641%" height="15" fill="rgb(246,171,24)" fg:x="3034" fg:w="5"/><text x="99.8560%" y="543.50"></text></g><g><title>`0x7FF9639E9A1D (5 samples, 0.16%)</title><rect x="99.6060%" y="517" width="0.1641%" height="15" fill="rgb(215,142,24)" fg:x="3034" fg:w="5"/><text x="99.8560%" y="527.50"></text></g><g><title>`0x7FF9616418CE (1 samples, 0.03%)</title><rect x="99.7374%" y="501" width="0.0328%" height="15" fill="rgb(250,187,7)" fg:x="3038" fg:w="1"/><text x="99.9874%" y="511.50"></text></g><g><title>`0x7FF96168D47B (1 samples, 0.03%)</title><rect x="99.7374%" y="485" width="0.0328%" height="15" fill="rgb(228,66,33)" fg:x="3038" fg:w="1"/><text x="99.9874%" y="495.50"></text></g><g><title>`0x7FF9616A32A3 (1 samples, 0.03%)</title><rect x="99.7374%" y="469" width="0.0328%" height="15" fill="rgb(234,215,21)" fg:x="3038" fg:w="1"/><text x="99.9874%" y="479.50"></text></g><g><title>`0x7FF96168ECFC (1 samples, 0.03%)</title><rect x="99.7374%" y="453" width="0.0328%" height="15" fill="rgb(222,191,20)" fg:x="3038" fg:w="1"/><text x="99.9874%" y="463.50"></text></g><g><title>`0x7FF96169ABAE (1 samples, 0.03%)</title><rect x="99.7374%" y="437" width="0.0328%" height="15" fill="rgb(245,79,54)" fg:x="3038" fg:w="1"/><text x="99.9874%" y="447.50"></text></g><g><title>`0x7FF96169ADD4 (1 samples, 0.03%)</title><rect x="99.7374%" y="421" width="0.0328%" height="15" fill="rgb(240,10,37)" fg:x="3038" fg:w="1"/><text x="99.9874%" y="431.50"></text></g><g><title>`0x7FF96165F367 (1 samples, 0.03%)</title><rect x="99.7374%" y="405" width="0.0328%" height="15" fill="rgb(214,192,32)" fg:x="3038" fg:w="1"/><text x="99.9874%" y="415.50"></text></g><g><title>`0x7FF963A27EF6 (1 samples, 0.03%)</title><rect x="99.7374%" y="389" width="0.0328%" height="15" fill="rgb(209,36,54)" fg:x="3038" fg:w="1"/><text x="99.9874%" y="399.50"></text></g><g><title>`0x7FF963A6D224 (1 samples, 0.03%)</title><rect x="99.7374%" y="373" width="0.0328%" height="15" fill="rgb(220,10,11)" fg:x="3038" fg:w="1"/><text x="99.9874%" y="383.50"></text></g><g><title>`0x7FF963AA382D (1 samples, 0.03%)</title><rect x="99.7702%" y="645" width="0.0328%" height="15" fill="rgb(221,106,17)" fg:x="3039" fg:w="1"/><text x="100.0202%" y="655.50"></text></g><g><title>`0x7FF9639E70A6 (1 samples, 0.03%)</title><rect x="99.7702%" y="629" width="0.0328%" height="15" fill="rgb(251,142,44)" fg:x="3039" fg:w="1"/><text x="100.0202%" y="639.50"></text></g><g><title>`0x7FF9639E01FD (1 samples, 0.03%)</title><rect x="99.7702%" y="613" width="0.0328%" height="15" fill="rgb(238,13,15)" fg:x="3039" fg:w="1"/><text x="100.0202%" y="623.50"></text></g><g><title>`0x7FF9639E0446 (1 samples, 0.03%)</title><rect x="99.7702%" y="597" width="0.0328%" height="15" fill="rgb(208,107,27)" fg:x="3039" fg:w="1"/><text x="100.0202%" y="607.50"></text></g><g><title>`0x7FF963A01927 (1 samples, 0.03%)</title><rect x="99.7702%" y="581" width="0.0328%" height="15" fill="rgb(205,136,37)" fg:x="3039" fg:w="1"/><text x="100.0202%" y="591.50"></text></g><g><title>`0x7FF9639E66EE (1 samples, 0.03%)</title><rect x="99.7702%" y="565" width="0.0328%" height="15" fill="rgb(250,205,27)" fg:x="3039" fg:w="1"/><text x="100.0202%" y="575.50"></text></g><g><title>`0x7FF9639E6D40 (1 samples, 0.03%)</title><rect x="99.7702%" y="549" width="0.0328%" height="15" fill="rgb(210,80,43)" fg:x="3039" fg:w="1"/><text x="100.0202%" y="559.50"></text></g><g><title>`0x7FF9639EFA75 (1 samples, 0.03%)</title><rect x="99.7702%" y="533" width="0.0328%" height="15" fill="rgb(247,160,36)" fg:x="3039" fg:w="1"/><text x="100.0202%" y="543.50"></text></g><g><title>`0x7FF9639EFCC9 (1 samples, 0.03%)</title><rect x="99.7702%" y="517" width="0.0328%" height="15" fill="rgb(234,13,49)" fg:x="3039" fg:w="1"/><text x="100.0202%" y="527.50"></text></g><g><title>`0x7FF9639F11E3 (1 samples, 0.03%)</title><rect x="99.7702%" y="501" width="0.0328%" height="15" fill="rgb(234,122,0)" fg:x="3039" fg:w="1"/><text x="100.0202%" y="511.50"></text></g><g><title>`0x7FF9639F1382 (1 samples, 0.03%)</title><rect x="99.7702%" y="485" width="0.0328%" height="15" fill="rgb(207,146,38)" fg:x="3039" fg:w="1"/><text x="100.0202%" y="495.50"></text></g><g><title>`0x7FF963AA39BD (1 samples, 0.03%)</title><rect x="99.8030%" y="645" width="0.0328%" height="15" fill="rgb(207,177,25)" fg:x="3040" fg:w="1"/><text x="100.0530%" y="655.50"></text></g><g><title>`0x7FF96165B28B (1 samples, 0.03%)</title><rect x="99.8030%" y="629" width="0.0328%" height="15" fill="rgb(211,178,42)" fg:x="3040" fg:w="1"/><text x="100.0530%" y="639.50"></text></g><g><title>`0x7FF96165B32B (1 samples, 0.03%)</title><rect x="99.8030%" y="613" width="0.0328%" height="15" fill="rgb(230,69,54)" fg:x="3040" fg:w="1"/><text x="100.0530%" y="623.50"></text></g><g><title>`0x7FF963A6D224 (1 samples, 0.03%)</title><rect x="99.8030%" y="597" width="0.0328%" height="15" fill="rgb(214,135,41)" fg:x="3040" fg:w="1"/><text x="100.0530%" y="607.50"></text></g><g><title>`0x7FF9639E88A8 (1 samples, 0.03%)</title><rect x="99.8359%" y="613" width="0.0328%" height="15" fill="rgb(237,67,25)" fg:x="3041" fg:w="1"/><text x="100.0859%" y="623.50"></text></g><g><title>`0x7FF9639E4479 (1 samples, 0.03%)</title><rect x="99.8359%" y="597" width="0.0328%" height="15" fill="rgb(222,189,50)" fg:x="3041" fg:w="1"/><text x="100.0859%" y="607.50"></text></g><g><title>`0x7FF9639E4C14 (1 samples, 0.03%)</title><rect x="99.8359%" y="581" width="0.0328%" height="15" fill="rgb(245,148,34)" fg:x="3041" fg:w="1"/><text x="100.0859%" y="591.50"></text></g><g><title>`0x7FF9639E7BA2 (1 samples, 0.03%)</title><rect x="99.8359%" y="565" width="0.0328%" height="15" fill="rgb(222,29,6)" fg:x="3041" fg:w="1"/><text x="100.0859%" y="575.50"></text></g><g><title>`0x7FF9639DF49F (1 samples, 0.03%)</title><rect x="99.8359%" y="549" width="0.0328%" height="15" fill="rgb(221,189,43)" fg:x="3041" fg:w="1"/><text x="100.0859%" y="559.50"></text></g><g><title>`0x7FF9639E2A66 (1 samples, 0.03%)</title><rect x="99.8359%" y="533" width="0.0328%" height="15" fill="rgb(207,36,27)" fg:x="3041" fg:w="1"/><text x="100.0859%" y="543.50"></text></g><g><title>`0x7FF9639E2BD9 (1 samples, 0.03%)</title><rect x="99.8359%" y="517" width="0.0328%" height="15" fill="rgb(217,90,24)" fg:x="3041" fg:w="1"/><text x="100.0859%" y="527.50"></text></g><g><title>`0x7FF963A6FDF4 (1 samples, 0.03%)</title><rect x="99.8359%" y="501" width="0.0328%" height="15" fill="rgb(224,66,35)" fg:x="3041" fg:w="1"/><text x="100.0859%" y="511.50"></text></g><g><title>`0x7FF963AA3AFD (2 samples, 0.07%)</title><rect x="99.8359%" y="645" width="0.0657%" height="15" fill="rgb(221,13,50)" fg:x="3041" fg:w="2"/><text x="100.0859%" y="655.50"></text></g><g><title>`0x7FF9639E7B29 (2 samples, 0.07%)</title><rect x="99.8359%" y="629" width="0.0657%" height="15" fill="rgb(236,68,49)" fg:x="3041" fg:w="2"/><text x="100.0859%" y="639.50"></text></g><g><title>`0x7FF9639E892A (1 samples, 0.03%)</title><rect x="99.8687%" y="613" width="0.0328%" height="15" fill="rgb(229,146,28)" fg:x="3042" fg:w="1"/><text x="100.1187%" y="623.50"></text></g><g><title>`0x7FF963AA3C42 (1 samples, 0.03%)</title><rect x="99.9015%" y="645" width="0.0328%" height="15" fill="rgb(225,31,38)" fg:x="3043" fg:w="1"/><text x="100.1515%" y="655.50"></text></g><g><title>`0x7FF963A3C0E0 (1 samples, 0.03%)</title><rect x="99.9015%" y="629" width="0.0328%" height="15" fill="rgb(250,208,3)" fg:x="3043" fg:w="1"/><text x="100.1515%" y="639.50"></text></g><g><title>`0x7FF963A3C0E0 (1 samples, 0.03%)</title><rect x="99.9015%" y="613" width="0.0328%" height="15" fill="rgb(246,54,23)" fg:x="3043" fg:w="1"/><text x="100.1515%" y="623.50"></text></g><g><title>`0x7FF963A3C05A (1 samples, 0.03%)</title><rect x="99.9015%" y="597" width="0.0328%" height="15" fill="rgb(243,76,11)" fg:x="3043" fg:w="1"/><text x="100.1515%" y="607.50"></text></g><g><title>`0x7FF963A3C2C7 (1 samples, 0.03%)</title><rect x="99.9015%" y="581" width="0.0328%" height="15" fill="rgb(245,21,50)" fg:x="3043" fg:w="1"/><text x="100.1515%" y="591.50"></text></g><g><title>`0x7FF9639E9A1D (1 samples, 0.03%)</title><rect x="99.9015%" y="565" width="0.0328%" height="15" fill="rgb(228,9,43)" fg:x="3043" fg:w="1"/><text x="100.1515%" y="575.50"></text></g><g><title>`0x7FF9611E6216 (1 samples, 0.03%)</title><rect x="99.9015%" y="549" width="0.0328%" height="15" fill="rgb(208,100,47)" fg:x="3043" fg:w="1"/><text x="100.1515%" y="559.50"></text></g><g><title>`0x7FF9611E7730 (1 samples, 0.03%)</title><rect x="99.9015%" y="533" width="0.0328%" height="15" fill="rgb(232,26,8)" fg:x="3043" fg:w="1"/><text x="100.1515%" y="543.50"></text></g><g><title>`0x7FF9611EC80C (1 samples, 0.03%)</title><rect x="99.9015%" y="517" width="0.0328%" height="15" fill="rgb(216,166,38)" fg:x="3043" fg:w="1"/><text x="100.1515%" y="527.50"></text></g><g><title>`0x7FF9611EC9EE (1 samples, 0.03%)</title><rect x="99.9015%" y="501" width="0.0328%" height="15" fill="rgb(251,202,51)" fg:x="3043" fg:w="1"/><text x="100.1515%" y="511.50"></text></g><g><title>`0x7FF9611ECB0A (1 samples, 0.03%)</title><rect x="99.9015%" y="485" width="0.0328%" height="15" fill="rgb(254,216,34)" fg:x="3043" fg:w="1"/><text x="100.1515%" y="495.50"></text></g><g><title>`0x7FF963A44C43 (17 samples, 0.56%)</title><rect x="99.4091%" y="677" width="0.5581%" height="15" fill="rgb(251,32,27)" fg:x="3028" fg:w="17"/><text x="99.6591%" y="687.50"></text></g><g><title>`0x7FF963A44DBB (17 samples, 0.56%)</title><rect x="99.4091%" y="661" width="0.5581%" height="15" fill="rgb(208,127,28)" fg:x="3028" fg:w="17"/><text x="99.6591%" y="671.50"></text></g><g><title>`0x7FF963AA3C6E (1 samples, 0.03%)</title><rect x="99.9343%" y="645" width="0.0328%" height="15" fill="rgb(224,137,22)" fg:x="3044" fg:w="1"/><text x="100.1843%" y="655.50"></text></g><g><title>`0x7FF963A3669C (1 samples, 0.03%)</title><rect x="99.9343%" y="629" width="0.0328%" height="15" fill="rgb(254,70,32)" fg:x="3044" fg:w="1"/><text x="100.1843%" y="639.50"></text></g><g><title>`0x7FF963A3665D (1 samples, 0.03%)</title><rect x="99.9343%" y="613" width="0.0328%" height="15" fill="rgb(229,75,37)" fg:x="3044" fg:w="1"/><text x="100.1843%" y="623.50"></text></g><g><title>`0x7FF963A3672E (1 samples, 0.03%)</title><rect x="99.9343%" y="597" width="0.0328%" height="15" fill="rgb(252,64,23)" fg:x="3044" fg:w="1"/><text x="100.1843%" y="607.50"></text></g><g><title>`0x7FF9639F47B1 (1 samples, 0.03%)</title><rect x="99.9343%" y="581" width="0.0328%" height="15" fill="rgb(232,162,48)" fg:x="3044" fg:w="1"/><text x="100.1843%" y="591.50"></text></g><g><title>`0x7FF9639F5B74 (1 samples, 0.03%)</title><rect x="99.9343%" y="565" width="0.0328%" height="15" fill="rgb(246,160,12)" fg:x="3044" fg:w="1"/><text x="100.1843%" y="575.50"></text></g><g><title>`0x7FF9639F6853 (1 samples, 0.03%)</title><rect x="99.9343%" y="549" width="0.0328%" height="15" fill="rgb(247,166,0)" fg:x="3044" fg:w="1"/><text x="100.1843%" y="559.50"></text></g><g><title>all (3,046 samples, 100%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(249,219,21)" fg:x="0" fg:w="3046"/><text x="0.2500%" y="719.50"></text></g><g><title>`0x7FF963A44BEE (18 samples, 0.59%)</title><rect x="99.4091%" y="693" width="0.5909%" height="15" fill="rgb(205,209,3)" fg:x="3028" fg:w="18"/><text x="99.6591%" y="703.50"></text></g><g><title>`0x7FF963A44C54 (1 samples, 0.03%)</title><rect x="99.9672%" y="677" width="0.0328%" height="15" fill="rgb(243,44,1)" fg:x="3045" fg:w="1"/><text x="100.2172%" y="687.50"></text></g><g><title>`0x7FF963AA0371 (1 samples, 0.03%)</title><rect x="99.9672%" y="661" width="0.0328%" height="15" fill="rgb(206,159,16)" fg:x="3045" fg:w="1"/><text x="100.2172%" y="671.50"></text></g><g><title>`0x7FF9639E083A (1 samples, 0.03%)</title><rect x="99.9672%" y="645" width="0.0328%" height="15" fill="rgb(244,77,30)" fg:x="3045" fg:w="1"/><text x="100.2172%" y="655.50"></text></g><g><title>`0x7FF9639E0877 (1 samples, 0.03%)</title><rect x="99.9672%" y="629" width="0.0328%" height="15" fill="rgb(218,69,12)" fg:x="3045" fg:w="1"/><text x="100.2172%" y="639.50"></text></g></svg></svg>